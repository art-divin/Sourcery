#if !canImport(ObjectiveC)
import XCTest

extension ActorSpec {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ActorSpec = [
        ("Actor__reports_kind_as_actor", Actor__reports_kind_as_actor),
    ]
}

extension AnnotationsParserSpec {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__AnnotationsParserSpec = [
        ("AnnotationsParser__parse_line____extracts_single_annotation", AnnotationsParser__parse_line____extracts_single_annotation),
        ("AnnotationsParser__parse_line____extracts_repeated_annotations_into_array", AnnotationsParser__parse_line____extracts_repeated_annotations_into_array),
        ("AnnotationsParser__parse_line____extracts_multiple_annotations_on_the_same_line", AnnotationsParser__parse_line____extracts_multiple_annotations_on_the_same_line),
        ("AnnotationsParser__parse_content____extracts_inline_annotations", AnnotationsParser__parse_content____extracts_inline_annotations),
        ("AnnotationsParser__parse_content____extracts_inline_annotations_from_multi_line_comments", AnnotationsParser__parse_content____extracts_inline_annotations_from_multi_line_comments),
        ("AnnotationsParser__parse_content____extracts_multi_line_annotations__including_numbers", AnnotationsParser__parse_content____extracts_multi_line_annotations__including_numbers),
        ("AnnotationsParser__parse_content____extracts_repeated_annotations_into_array", AnnotationsParser__parse_content____extracts_repeated_annotations_into_array),
        ("AnnotationsParser__parse_content____extracts_annotations_interleaved_with_comments", AnnotationsParser__parse_content____extracts_annotations_interleaved_with_comments),
        ("AnnotationsParser__parse_content____extracts_end_of_line_annotations", AnnotationsParser__parse_content____extracts_end_of_line_annotations),
        ("AnnotationsParser__parse_content____extracts_end_of_line_block_comment_annotations", AnnotationsParser__parse_content____extracts_end_of_line_block_comment_annotations),
        ("AnnotationsParser__parse_content____ignores_annotations_in_string_literals", AnnotationsParser__parse_content____ignores_annotations_in_string_literals),
        ("AnnotationsParser__parse_content____extracts_file_annotations", AnnotationsParser__parse_content____extracts_file_annotations),
        ("AnnotationsParser__parse_content____extracts_namespace_annotations", AnnotationsParser__parse_content____extracts_namespace_annotations),
        ("AnnotationsParser__parse_content____extracts_json_string_annotations_into_array", AnnotationsParser__parse_content____extracts_json_string_annotations_into_array),
        ("AnnotationsParser__parse_content____extracts_json_string_annotations_into_arrays_of_dictionaries", AnnotationsParser__parse_content____extracts_json_string_annotations_into_arrays_of_dictionaries),
        ("AnnotationsParser__parse_content____extracts_json_string_annotations_into_dictionary", AnnotationsParser__parse_content____extracts_json_string_annotations_into_dictionary),
        ("AnnotationsParser__parse_content____extracts_json_string_annotations_into_dictionaries_of_arrays", AnnotationsParser__parse_content____extracts_json_string_annotations_into_dictionaries_of_arrays),
    ]
}

extension ClassSpec {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ClassSpec = [
        ("Class__reports_kind_as_class", Class__reports_kind_as_class),
    ]
}

extension ConfigurationSpec {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ConfigurationSpec = [
        ("Configuration__given_valid_config_file_with_env_placeholders__replaces_the_env_placeholder", Configuration__given_valid_config_file_with_env_placeholders__replaces_the_env_placeholder),
        ("Configuration__given_valid_config_file_with_env_placeholders__removes_args_entries_with_missing_env_variables", Configuration__given_valid_config_file_with_env_placeholders__removes_args_entries_with_missing_env_variables),
        ("Configuration__given_config_file_with_multiple_configurations__resolves_each_configuration", Configuration__given_config_file_with_multiple_configurations__resolves_each_configuration),
        ("Configuration__given_invalid_config_file__throws_error_on_invalid_file_format", Configuration__given_invalid_config_file__throws_error_on_invalid_file_format),
        ("Configuration__given_invalid_config_file__throws_error_on_empty_sources", Configuration__given_invalid_config_file__throws_error_on_empty_sources),
        ("Configuration__given_invalid_config_file__throws_error_on_missing_sources", Configuration__given_invalid_config_file__throws_error_on_missing_sources),
        ("Configuration__given_invalid_config_file__throws_error_on_invalid_sources_format", Configuration__given_invalid_config_file__throws_error_on_invalid_sources_format),
        ("Configuration__given_invalid_config_file__throws_error_on_missing_sources_include_key", Configuration__given_invalid_config_file__throws_error_on_missing_sources_include_key),
        ("Configuration__given_invalid_config_file__throws_error_on_invalid_sources_include_format", Configuration__given_invalid_config_file__throws_error_on_invalid_sources_include_format),
        ("Configuration__given_invalid_config_file__throws_error_on_missing_templates_key", Configuration__given_invalid_config_file__throws_error_on_missing_templates_key),
        ("Configuration__given_invalid_config_file__throws_error_on_empty_templates", Configuration__given_invalid_config_file__throws_error_on_empty_templates),
        ("Configuration__given_invalid_config_file__throws_error_on_missing_template_include_key", Configuration__given_invalid_config_file__throws_error_on_missing_template_include_key),
        ("Configuration__given_invalid_config_file__throws_error_on_invalid_template_include_format", Configuration__given_invalid_config_file__throws_error_on_invalid_template_include_format),
        ("Configuration__given_invalid_config_file__throws_error_on_empty_projects", Configuration__given_invalid_config_file__throws_error_on_empty_projects),
        ("Configuration__given_invalid_config_file__throws_error_on_missing_project_file", Configuration__given_invalid_config_file__throws_error_on_missing_project_file),
        ("Configuration__given_invalid_config_file__throws_error_on_missing_target_key", Configuration__given_invalid_config_file__throws_error_on_missing_target_key),
        ("Configuration__given_invalid_config_file__throws_error_on_empty_targets", Configuration__given_invalid_config_file__throws_error_on_empty_targets),
        ("Configuration__given_invalid_config_file__throws_error_on_missing_target_name_key", Configuration__given_invalid_config_file__throws_error_on_missing_target_name_key),
        ("Configuration__given_invalid_config_file__throws_error_on_missing_output_key", Configuration__given_invalid_config_file__throws_error_on_missing_output_key),
        ("Configuration__given_invalid_config_file__throws_error_on_invalid_output_format", Configuration__given_invalid_config_file__throws_error_on_invalid_output_format),
        ("Configuration__given_invalid_config_file__throws_error_on_invalid_cacheBasePath_format", Configuration__given_invalid_config_file__throws_error_on_invalid_cacheBasePath_format),
        ("Source__provided_with_sources_paths__include_paths_provided_as_an_array", Source__provided_with_sources_paths__include_paths_provided_as_an_array),
        ("Source__provided_with_sources_paths__include_paths_provided_with__include__key", Source__provided_with_sources_paths__include_paths_provided_with__include__key),
        ("Source__provided_with_sources_paths__exclude_paths_provided_with_the__exclude__key", Source__provided_with_sources_paths__exclude_paths_provided_with_the__exclude__key),
        ("Templates__provided_with_templates_paths__include_paths_provided_as_an_array", Templates__provided_with_templates_paths__include_paths_provided_as_an_array),
        ("Templates__provided_with_templates_paths__include_paths_provided_with__include__key", Templates__provided_with_templates_paths__include_paths_provided_with__include__key),
        ("Templates__provided_with_templates_paths__exclude_paths_provided_with_the__exclude__key", Templates__provided_with_templates_paths__exclude_paths_provided_with_the__exclude__key),
        ("Cache_Base_Path__provided_with_cacheBasePath__has_the_correct_cacheBasePath", Cache_Base_Path__provided_with_cacheBasePath__has_the_correct_cacheBasePath),
        ("Parse_Documentation__when_parseDocumentation_is_true__has_the_correct_parseDocumentation", Parse_Documentation__when_parseDocumentation_is_true__has_the_correct_parseDocumentation),
        ("Parse_Documentation__when_parseDocumentation_is_unset__defaults_to_false", Parse_Documentation__when_parseDocumentation_is_unset__defaults_to_false),
    ]
}

extension DiffableSpec {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__DiffableSpec = [
        ("DiffableResults__appends_element", DiffableResults__appends_element),
        ("DiffableResults__ads_newline_separator_between_elements", DiffableResults__ads_newline_separator_between_elements),
        ("DiffableResults__processes_identifier_for_all_elements", DiffableResults__processes_identifier_for_all_elements),
        ("DiffableResults__joins_2_diffable_results", DiffableResults__joins_2_diffable_results),
        ("DiffableResults__isEmpty__given_its_empty__returns_true", DiffableResults__isEmpty__given_its_empty__returns_true),
        ("DiffableResults__isEmpty__given_its_not_empty__returns_false", DiffableResults__isEmpty__given_its_not_empty__returns_false),
        ("DiffableResults__trackDifference__given_not_diffable_elements__ads_them_if_they_aren_t_equal", DiffableResults__trackDifference__given_not_diffable_elements__ads_them_if_they_aren_t_equal),
        ("DiffableResults__trackDifference__given_not_diffable_elements__doesn_t_add_them_if_they_are_equal", DiffableResults__trackDifference__given_not_diffable_elements__doesn_t_add_them_if_they_are_equal),
        ("DiffableResults__trackDifference__given_diffable_elements__ads_them_if_they_aren_t_equal", DiffableResults__trackDifference__given_diffable_elements__ads_them_if_they_aren_t_equal),
        ("DiffableResults__trackDifference__given_diffable_elements__doesn_t_add_them_if_they_are_equal", DiffableResults__trackDifference__given_diffable_elements__doesn_t_add_them_if_they_are_equal),
        ("DiffableResults__trackDifference__given_diffable_elements__given_arrays__finds_difference_in_count", DiffableResults__trackDifference__given_diffable_elements__given_arrays__finds_difference_in_count),
        ("DiffableResults__trackDifference__given_diffable_elements__given_arrays__finds_difference_at_given_idx", DiffableResults__trackDifference__given_diffable_elements__given_arrays__finds_difference_at_given_idx),
        ("DiffableResults__trackDifference__given_diffable_elements__given_arrays__finds_difference_at_multiple_idx", DiffableResults__trackDifference__given_diffable_elements__given_arrays__finds_difference_at_multiple_idx),
        ("DiffableResults__trackDifference__given_diffable_elements__given_dictionaries__finds_difference_in_count", DiffableResults__trackDifference__given_diffable_elements__given_dictionaries__finds_difference_in_count),
        ("DiffableResults__trackDifference__given_diffable_elements__given_dictionaries__finds_difference_at_given_key_count", DiffableResults__trackDifference__given_diffable_elements__given_dictionaries__finds_difference_at_given_key_count),
    ]
}

extension DryOutputSpec {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__DryOutputSpec = [
        ("DryOutput_JavaScriptTemplate__has_no_stdout_json_output_if_isDryRun_equal_false___also_default_value_", DryOutput_JavaScriptTemplate__has_no_stdout_json_output_if_isDryRun_equal_false___also_default_value_),
        ("DryOutput_JavaScriptTemplate__handles_includes", DryOutput_JavaScriptTemplate__handles_includes),
        ("DryOutput_JavaScriptTemplate__handles_includes_from_included_files_relatively", DryOutput_JavaScriptTemplate__handles_includes_from_included_files_relatively),
        ("DryOutput_JavaScriptTemplate__handles_free_functions", DryOutput_JavaScriptTemplate__handles_free_functions),
        ("DryOutput_StencilTemplate__has_no_stdout_json_output_if_isDryRun_equal_false___also_default_value_", DryOutput_StencilTemplate__has_no_stdout_json_output_if_isDryRun_equal_false___also_default_value_),
        ("DryOutput_StencilTemplate__includes_partial_templates", DryOutput_StencilTemplate__includes_partial_templates),
        ("DryOutput_StencilTemplate__supports_different_ways_for_code_generation", DryOutput_StencilTemplate__supports_different_ways_for_code_generation),
        ("SwiftTemplate__has_no_stdout_json_output_if_isDryRun_equal_false___also_default_value_", SwiftTemplate__has_no_stdout_json_output_if_isDryRun_equal_false___also_default_value_),
        ("SwiftTemplate__given_swifttemplate__generates_correct_output__if_isDryRun_equal_true", SwiftTemplate__given_swifttemplate__generates_correct_output__if_isDryRun_equal_true),
        ("SwiftTemplate__given_ejs_template__generates_correct_output__if_isDryRun_equal_true", SwiftTemplate__given_ejs_template__generates_correct_output__if_isDryRun_equal_true),
        ("SwiftTemplate__handles_includes", SwiftTemplate__handles_includes),
        ("SwiftTemplate__handles_file_includes", SwiftTemplate__handles_file_includes),
        ("SwiftTemplate__handles_includes_without_swifttemplate_extension", SwiftTemplate__handles_includes_without_swifttemplate_extension),
        ("SwiftTemplate__handles_file_includes_without_swift_extension", SwiftTemplate__handles_file_includes_without_swift_extension),
        ("SwiftTemplate__handles_includes_from_included_files_relatively", SwiftTemplate__handles_includes_from_included_files_relatively),
        ("SwiftTemplate__handles_file_includes_from_included_files_relatively", SwiftTemplate__handles_file_includes_from_included_files_relatively),
        ("SwiftTemplate__handles_free_functions", SwiftTemplate__handles_free_functions),
        ("SwiftTemplate__return_all_outputs_values", SwiftTemplate__return_all_outputs_values),
        ("SwiftTemplate__has_same_templates_in_outputs_as_in_inputs", SwiftTemplate__has_same_templates_in_outputs_as_in_inputs),
    ]
}

extension EnumSpec {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__EnumSpec = [
        ("Enum__reports_kind_as_enum", Enum__reports_kind_as_enum),
        ("Enum__doesn_t_have_associated_values", Enum__doesn_t_have_associated_values),
        ("Enum__given_associated_values__hasAssociatedValues", Enum__given_associated_values__hasAssociatedValues),
        ("Enum__When_testing_equality__given_same_items__is_equal", Enum__When_testing_equality__given_same_items__is_equal),
        ("Enum__When_testing_equality__given_different_items__is_not_equal", Enum__When_testing_equality__given_different_items__is_not_equal),
    ]
}

extension FileParserAssociatedTypeSpec {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__FileParserAssociatedTypeSpec = [
        ("Parser__parse_associated_type__given_protocol__with_an_associated_type__extracts_associated_type_properly", Parser__parse_associated_type__given_protocol__with_an_associated_type__extracts_associated_type_properly),
        ("Parser__parse_associated_type__given_protocol__with_multiple_associated_types__extracts_associated_types_properly", Parser__parse_associated_type__given_protocol__with_multiple_associated_types__extracts_associated_types_properly),
        ("Parser__parse_associated_type__given_protocol__with_associated_type_constrained_to_an_unknown_type__extracts_associated_type_properly", Parser__parse_associated_type__given_protocol__with_associated_type_constrained_to_an_unknown_type__extracts_associated_type_properly),
        ("Parser__parse_associated_type__given_protocol__with_associated_type_constrained_to_a_known_type__extracts_associated_type_properly", Parser__parse_associated_type__given_protocol__with_associated_type_constrained_to_a_known_type__extracts_associated_type_properly),
        ("Parser__parse_associated_type__given_protocol__with_associated_type_constrained_to_a_composite_type__extracts_associated_type_properly_and_creates_a_protocol_composition", Parser__parse_associated_type__given_protocol__with_associated_type_constrained_to_a_composite_type__extracts_associated_type_properly_and_creates_a_protocol_composition),
    ]
}

extension FileParserAttributesSpec {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__FileParserAttributesSpec = [
        ("FileParser__extracts_type_attribute_and_modifiers", FileParser__extracts_type_attribute_and_modifiers),
        ("FileParser__extracts_method_attributes_and_modifiers", FileParser__extracts_method_attributes_and_modifiers),
        ("FileParser__extracts_method_parameter_attributes", FileParser__extracts_method_parameter_attributes),
        ("FileParser__extracts_variable_attributes_and_modifiers", FileParser__extracts_variable_attributes_and_modifiers),
        ("FileParser__extracts_type_attributes", FileParser__extracts_type_attributes),
        ("FileParser__extracts_property_wrapper_attributes", FileParser__extracts_property_wrapper_attributes),
        ("FileParser__given_attribute_with_arguments__extracts_attribute_arguments_with_values", FileParser__given_attribute_with_arguments__extracts_attribute_arguments_with_values),
    ]
}

extension FileParserMethodsSpec {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__FileParserMethodsSpec = [
        ("FileParser__parseMethod__extracts_methods_with_inout_properties", FileParser__parseMethod__extracts_methods_with_inout_properties),
        ("FileParser__parseMethod__extracts_methods_with_inout_closure", FileParser__parseMethod__extracts_methods_with_inout_closure),
        ("FileParser__parseMethod__extracts_methods_with_async_closure", FileParser__parseMethod__extracts_methods_with_async_closure),
        ("FileParser__parseMethod__extracts_methods_with_attributes", FileParser__parseMethod__extracts_methods_with_attributes),
        ("FileParser__parseMethod__extracts_methods_with_escaping_closure_attribute_correctly", FileParser__parseMethod__extracts_methods_with_escaping_closure_attribute_correctly),
        ("FileParser__parseMethod__extracts_protocol_methods_properly", FileParser__parseMethod__extracts_protocol_methods_properly),
        ("FileParser__parseMethod__extracts_class_method_properly", FileParser__parseMethod__extracts_class_method_properly),
        ("FileParser__parseMethod__extracts_enum_methods_properly", FileParser__parseMethod__extracts_enum_methods_properly),
        ("FileParser__parseMethod__extracts_struct_methods_properly", FileParser__parseMethod__extracts_struct_methods_properly),
        ("FileParser__parseMethod__extracts_static_method_properly", FileParser__parseMethod__extracts_static_method_properly),
        ("FileParser__parseMethod__extracts_free_functions_properly", FileParser__parseMethod__extracts_free_functions_properly),
        ("FileParser__parseMethod__extracts_free_functions_properly_with_private_access", FileParser__parseMethod__extracts_free_functions_properly_with_private_access),
        ("FileParser__parseMethod__extracts_method_definedIn_type_name", FileParser__parseMethod__extracts_method_definedIn_type_name),
        ("FileParser__parseMethod__extracts_method_annotations", FileParser__parseMethod__extracts_method_annotations),
        ("FileParser__parseMethod__extracts_method_inline_annotations", FileParser__parseMethod__extracts_method_inline_annotations),
        ("FileParser__parseMethod__extracts_parameter_annotations", FileParser__parseMethod__extracts_parameter_annotations),
        ("FileParser__parseMethod__extracts_parameter_inline_annotations", FileParser__parseMethod__extracts_parameter_inline_annotations),
        ("FileParser__parseMethod__given_method_with_parameters__extracts_method_with_single_parameter_properly", FileParser__parseMethod__given_method_with_parameters__extracts_method_with_single_parameter_properly),
        ("FileParser__parseMethod__given_method_with_parameters__extracts_method_with_variadic_parameter_properly", FileParser__parseMethod__given_method_with_parameters__extracts_method_with_variadic_parameter_properly),
        ("FileParser__parseMethod__given_method_with_parameters__extracts_method_with_single_set_parameter_properly", FileParser__parseMethod__given_method_with_parameters__extracts_method_with_single_set_parameter_properly),
        ("FileParser__parseMethod__given_method_with_parameters__extracts_method_with_two_parameters_properly", FileParser__parseMethod__given_method_with_parameters__extracts_method_with_two_parameters_properly),
        ("FileParser__parseMethod__given_method_with_parameters__extracts_method_with_complex_parameters_properly", FileParser__parseMethod__given_method_with_parameters__extracts_method_with_complex_parameters_properly),
        ("FileParser__parseMethod__given_method_with_parameters__extracts_method_with_parameter_with_two_names", FileParser__parseMethod__given_method_with_parameters__extracts_method_with_parameter_with_two_names),
        ("FileParser__parseMethod__given_method_with_parameters__extracts_parameters_having_inner_closure", FileParser__parseMethod__given_method_with_parameters__extracts_parameters_having_inner_closure),
        ("FileParser__parseMethod__given_method_with_parameters__extracts_inout_parameters", FileParser__parseMethod__given_method_with_parameters__extracts_inout_parameters),
        ("FileParser__parseMethod__given_method_with_parameters__given_parameter_default_value__extracts_simple_default_value", FileParser__parseMethod__given_method_with_parameters__given_parameter_default_value__extracts_simple_default_value),
        ("FileParser__parseMethod__given_method_with_parameters__given_parameter_default_value__extracts_complex_default_value", FileParser__parseMethod__given_method_with_parameters__given_parameter_default_value__extracts_complex_default_value),
        ("FileParser__parseMethod__given_method_with_parameters__given_parameters_are_split_between_lines__extracts_method_name_with_parametes_separated_by_line_break", FileParser__parseMethod__given_method_with_parameters__given_parameters_are_split_between_lines__extracts_method_name_with_parametes_separated_by_line_break),
        ("FileParser__parseMethod__given_generic_method__extracts_class_method_properly", FileParser__parseMethod__given_generic_method__extracts_class_method_properly),
        ("FileParser__parseMethod__given_generic_method__extracts_protocol_method_properly", FileParser__parseMethod__given_generic_method__extracts_protocol_method_properly),
        ("FileParser__parseMethod__given_method_with_return_type__extracts_tuple_return_type_correctly", FileParser__parseMethod__given_method_with_return_type__extracts_tuple_return_type_correctly),
        ("FileParser__parseMethod__given_method_with_return_type__extracts_closure_return_type_correcty", FileParser__parseMethod__given_method_with_return_type__extracts_closure_return_type_correcty),
        ("FileParser__parseMethod__given_method_with_return_type__extracts_optional_closure_return_type_correctly", FileParser__parseMethod__given_method_with_return_type__extracts_optional_closure_return_type_correctly),
        ("FileParser__parseMethod__given_method_with_return_type__extracts_optional_closure_return_type_correctly_2", FileParser__parseMethod__given_method_with_return_type__extracts_optional_closure_return_type_correctly_2),
        ("FileParser__parseMethod__given_initializer__extracts_initializer_properly", FileParser__parseMethod__given_initializer__extracts_initializer_properly),
        ("FileParser__parseMethod__given_initializer__extracts_failable_initializer_properly", FileParser__parseMethod__given_initializer__extracts_failable_initializer_properly),
    ]
}

extension FileParserProtocolCompositionSpec {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__FileParserProtocolCompositionSpec = [
        ("FileParser__parseProtocolComposition__extracts_protocol_compositions_properly", FileParser__parseProtocolComposition__extracts_protocol_compositions_properly),
        ("FileParser__parseProtocolComposition__extracts_annotations_on_a_protocol_composition", FileParser__parseProtocolComposition__extracts_annotations_on_a_protocol_composition),
    ]
}

extension FileParserSpec {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__FileParserSpec = [
        ("Parser__parse__regression_files__doesnt_crash_on_localized_strings", Parser__parse__regression_files__doesnt_crash_on_localized_strings),
        ("Parser__parse__given_it_has_sourcery_annotations__extract_annotations_from_extensions_properly", Parser__parse__given_it_has_sourcery_annotations__extract_annotations_from_extensions_properly),
        ("Parser__parse__given_it_has_sourcery_annotations__extracts_annotation_block", Parser__parse__given_it_has_sourcery_annotations__extracts_annotation_block),
        ("Parser__parse__given_it_has_sourcery_annotations__extracts_file_annotation_block", Parser__parse__given_it_has_sourcery_annotations__extracts_file_annotation_block),
        ("Parser__parse__given_it_has_sourcery_annotations__extracts_annotations_when_declaration_has_an_attribute_on_the_preceding_line", Parser__parse__given_it_has_sourcery_annotations__extracts_annotations_when_declaration_has_an_attribute_on_the_preceding_line),
        ("Parser__parse__given_it_has_sourcery_annotations__extracts_annotations_when_declaration_has_a_directive_on_the_preceding_line", Parser__parse__given_it_has_sourcery_annotations__extracts_annotations_when_declaration_has_a_directive_on_the_preceding_line),
        ("Parser__parse__given_it_has_sourcery_annotations__extracts_annotations_when_declaration_has_a_directive_and_an_attribute_on_the_preceding_line", Parser__parse__given_it_has_sourcery_annotations__extracts_annotations_when_declaration_has_a_directive_and_an_attribute_on_the_preceding_line),
        ("Parser__parse__given_struct__extracts_properly", Parser__parse__given_struct__extracts_properly),
        ("Parser__parse__given_struct__extracts_import_correctly", Parser__parse__given_struct__extracts_import_correctly),
        ("Parser__parse__given_struct__extracts_properly_with_access_information", Parser__parse__given_struct__extracts_properly_with_access_information),
        ("Parser__parse__given_struct__extracts_properly_with_access_information_for_extended_types_via_extension", Parser__parse__given_struct__extracts_properly_with_access_information_for_extended_types_via_extension),
        ("Parser__parse__given_struct__extracts_generic_struct_properly", Parser__parse__given_struct__extracts_generic_struct_properly),
        ("Parser__parse__given_struct__extracts_instance_variables_properly", Parser__parse__given_struct__extracts_instance_variables_properly),
        ("Parser__parse__given_struct__extracts_instance_variables_with_custom_accessors_properly", Parser__parse__given_struct__extracts_instance_variables_with_custom_accessors_properly),
        ("Parser__parse__given_struct__extracts_multi_line_instance_variables_definitions_properly", Parser__parse__given_struct__extracts_multi_line_instance_variables_definitions_properly),
        ("Parser__parse__given_struct__extracts_instance_variables_with_property_setters_properly", Parser__parse__given_struct__extracts_instance_variables_with_property_setters_properly),
        ("Parser__parse__given_struct__extracts_computed_variables_properly", Parser__parse__given_struct__extracts_computed_variables_properly),
        ("Parser__parse__given_struct__extracts_class_variables_properly", Parser__parse__given_struct__extracts_class_variables_properly),
        ("Parser__parse__given_struct__given_nested_struct__extracts_properly_from_body", Parser__parse__given_struct__given_nested_struct__extracts_properly_from_body),
        ("Parser__parse__given_class__extracts_variables_properly", Parser__parse__given_class__extracts_variables_properly),
        ("Parser__parse__given_class__extracts_inherited_types_properly", Parser__parse__given_class__extracts_inherited_types_properly),
        ("Parser__parse__given_class__extracts_annotations_correctly", Parser__parse__given_class__extracts_annotations_correctly),
        ("Parser__parse__given_class__extracts_documentation_correctly", Parser__parse__given_class__extracts_documentation_correctly),
        ("Parser__parse__given_class__extracts_documentation_correctly_if_there_is_a_directive_on_preceeding_line", Parser__parse__given_class__extracts_documentation_correctly_if_there_is_a_directive_on_preceeding_line),
        ("Parser__parse__given_class__extracts_documentation_correctly_if_there_is_a_directive_and_an_attribute_on_preceeding_line", Parser__parse__given_class__extracts_documentation_correctly_if_there_is_a_directive_and_an_attribute_on_preceeding_line),
        ("Parser__parse__given_typealias__given_global_typealias__extracts_global_typealiases_properly", Parser__parse__given_typealias__given_global_typealias__extracts_global_typealiases_properly),
        ("Parser__parse__given_typealias__given_global_typealias__extracts_typealiases_for_inner_types", Parser__parse__given_typealias__given_global_typealias__extracts_typealiases_for_inner_types),
        ("Parser__parse__given_typealias__given_global_typealias__extracts_typealiases_of_other_typealiases", Parser__parse__given_typealias__given_global_typealias__extracts_typealiases_of_other_typealiases),
        ("Parser__parse__given_typealias__given_global_typealias__extracts_typealias_for_tuple", Parser__parse__given_typealias__given_global_typealias__extracts_typealias_for_tuple),
        ("Parser__parse__given_typealias__given_global_typealias__extracts_typealias_for_closure", Parser__parse__given_typealias__given_global_typealias__extracts_typealias_for_closure),
        ("Parser__parse__given_typealias__given_global_typealias__extracts_typealias_for_void_closure", Parser__parse__given_typealias__given_global_typealias__extracts_typealias_for_void_closure),
        ("Parser__parse__given_typealias__given_global_typealias__extracts_private_typealias", Parser__parse__given_typealias__given_global_typealias__extracts_private_typealias),
        ("Parser__parse__given_typealias__given_local_typealias__extracts_local_typealiases_properly", Parser__parse__given_typealias__given_local_typealias__extracts_local_typealiases_properly),
        ("Parser__parse__given_a_protocol_composition__when_used_as_typeName__is_extracted_correctly_as_return_type", Parser__parse__given_a_protocol_composition__when_used_as_typeName__is_extracted_correctly_as_return_type),
        ("Parser__parse__given_a_protocol_composition__of_two_protocols__extracts_protocol_composition_for_typealias_with_ampersand", Parser__parse__given_a_protocol_composition__of_two_protocols__extracts_protocol_composition_for_typealias_with_ampersand),
        ("Parser__parse__given_a_protocol_composition__of_three_protocols__extracts_protocol_composition_for_typealias_with_ampersand", Parser__parse__given_a_protocol_composition__of_three_protocols__extracts_protocol_composition_for_typealias_with_ampersand),
        ("Parser__parse__given_a_protocol_composition__of_three_protocols__extracts_protocol_composition_for_typealias_with_ampersand_2", Parser__parse__given_a_protocol_composition__of_three_protocols__extracts_protocol_composition_for_typealias_with_ampersand_2),
        ("Parser__parse__given_a_protocol_composition__of_a_protocol_and_a_class__extracts_protocol_composition_for_typealias_with_ampersand", Parser__parse__given_a_protocol_composition__of_a_protocol_and_a_class__extracts_protocol_composition_for_typealias_with_ampersand),
        ("Parser__parse__given_a_protocol_composition__given_local_protocol_composition__extracts_local_protocol_compositions_properly", Parser__parse__given_a_protocol_composition__given_local_protocol_composition__extracts_local_protocol_compositions_properly),
        ("Parser__parse__given_enum__extracts_empty_enum_properly", Parser__parse__given_enum__extracts_empty_enum_properly),
        ("Parser__parse__given_enum__extracts_cases_properly", Parser__parse__given_enum__extracts_cases_properly),
        ("Parser__parse__given_enum__extracts_cases_with_special_names", Parser__parse__given_enum__extracts_cases_with_special_names),
        ("Parser__parse__given_enum__extracts_multi_byte_cases_properly", Parser__parse__given_enum__extracts_multi_byte_cases_properly),
        ("Parser__parse__given_enum__extracts_associated_value_annotations_properly", Parser__parse__given_enum__extracts_associated_value_annotations_properly),
        ("Parser__parse__given_enum__extracts_associated_value_inline_annotations_properly", Parser__parse__given_enum__extracts_associated_value_inline_annotations_properly),
        ("Parser__parse__given_enum__extracts_variables_properly", Parser__parse__given_enum__extracts_variables_properly),
        ("Parser__parse__given_enum__extracts_enums_with_custom_values", Parser__parse__given_enum__extracts_enums_with_custom_values),
        ("Parser__parse__given_enum__extracts_enums_without_rawType", Parser__parse__given_enum__extracts_enums_without_rawType),
        ("Parser__parse__given_enum__extracts_enums_with_associated_types", Parser__parse__given_enum__extracts_enums_with_associated_types),
        ("Parser__parse__given_enum__parses_enums_with_multibyte_cases_with_associated_types", Parser__parse__given_enum__parses_enums_with_multibyte_cases_with_associated_types),
        ("Parser__parse__given_enum__extracts_enums_with_indirect_cases", Parser__parse__given_enum__extracts_enums_with_indirect_cases),
        ("Parser__parse__given_enum__extracts_enums_with_Void_associated_type", Parser__parse__given_enum__extracts_enums_with_Void_associated_type),
        ("Parser__parse__given_enum__extracts_default_values_for_associated_values", Parser__parse__given_enum__extracts_default_values_for_associated_values),
        ("Parser__parse__given_enum__given_enum_cases_annotations__extracts_cases_with_annotations_properly", Parser__parse__given_enum__given_enum_cases_annotations__extracts_cases_with_annotations_properly),
        ("Parser__parse__given_enum__given_enum_cases_annotations__extracts_cases_with_inline_annotations_properly", Parser__parse__given_enum__given_enum_cases_annotations__extracts_cases_with_inline_annotations_properly),
        ("Parser__parse__given_enum__given_enum_cases_annotations__extracts_one_line_cases_with_inline_annotations_properly", Parser__parse__given_enum__given_enum_cases_annotations__extracts_one_line_cases_with_inline_annotations_properly),
        ("Parser__parse__given_enum__given_enum_cases_annotations__extracts_cases_with_annotations_and_computed_variables_properly", Parser__parse__given_enum__given_enum_cases_annotations__extracts_cases_with_annotations_and_computed_variables_properly),
        ("Parser__parse__given_enum__given_enum_without_rawType__extracts_inherited_types_properly", Parser__parse__given_enum__given_enum_without_rawType__extracts_inherited_types_properly),
        ("Parser__parse__given_protocol__extracts_generic_requirements_properly", Parser__parse__given_protocol__extracts_generic_requirements_properly),
        ("Parser__parse__given_protocol__extracts_empty_protocol_properly", Parser__parse__given_protocol__extracts_empty_protocol_properly),
        ("Parser__parse__given_protocol__does_not_consider_protocol_variables_as_computed", Parser__parse__given_protocol__does_not_consider_protocol_variables_as_computed),
        ("Parser__parse__given_protocol__does_consider_type_variables_as_computed_when_they_are__even_if_they_adhere_to_protocol", Parser__parse__given_protocol__does_consider_type_variables_as_computed_when_they_are__even_if_they_adhere_to_protocol),
        ("Parser__parse__given_protocol__does_not_consider_type_variables_as_computed_when_they_aren_t__even_if_they_adhere_to_protocol_and_have_didSet_blocks", Parser__parse__given_protocol__does_not_consider_type_variables_as_computed_when_they_aren_t__even_if_they_adhere_to_protocol_and_have_didSet_blocks),
        ("Parser__parse__given_protocol__sets_members_access_level_to_protocol_access_level", Parser__parse__given_protocol__sets_members_access_level_to_protocol_access_level),
    ]
}

extension FileParserSubscriptsSpec {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__FileParserSubscriptsSpec = [
        ("FileParser__parseSubscript__extracts_subscripts_properly", FileParser__parseSubscript__extracts_subscripts_properly),
        ("FileParser__parseSubscript__extracts_subscript_isMutable_state_properly", FileParser__parseSubscript__extracts_subscript_isMutable_state_properly),
        ("FileParser__parseSubscript__extracts_subscript_annotations", FileParser__parseSubscript__extracts_subscript_annotations),
    ]
}

extension FileParserVariableSpec {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__FileParserVariableSpec = [
        ("Parser__parseVariable__infers_generic_type_initializer_correctly", Parser__parseVariable__infers_generic_type_initializer_correctly),
        ("Parser__parseVariable__infers_types_for_variables_when_it_s_easy", Parser__parseVariable__infers_types_for_variables_when_it_s_easy),
        ("Parser__parseVariable__reports_variable_mutability", Parser__parseVariable__reports_variable_mutability),
        ("Parser__parseVariable__extracts_standard_property_correctly", Parser__parseVariable__extracts_standard_property_correctly),
        ("Parser__parseVariable__infers_types_for_variable_when_type_is_an_inner_type_of_the_contained_type_correctly", Parser__parseVariable__infers_types_for_variable_when_type_is_an_inner_type_of_the_contained_type_correctly),
        ("Parser__parseVariable__extracts_with_custom_access_correctly", Parser__parseVariable__extracts_with_custom_access_correctly),
        ("Parser__parseVariable__extracts_standard_let_property_correctly", Parser__parseVariable__extracts_standard_let_property_correctly),
        ("Parser__parseVariable__extracts_computed_property_correctly", Parser__parseVariable__extracts_computed_property_correctly),
        ("Parser__parseVariable__extracts_generic_property_correctly", Parser__parseVariable__extracts_generic_property_correctly),
        ("Parser__parseVariable__given_variable_defined_in_protocol__reports_variable_mutability", Parser__parseVariable__given_variable_defined_in_protocol__reports_variable_mutability),
        ("Parser__parseVariable__given_variable_defined_in_protocol__reports_variable_concurrency", Parser__parseVariable__given_variable_defined_in_protocol__reports_variable_concurrency),
        ("Parser__parseVariable__given_variable_defined_in_protocol__reports_variable_throwability", Parser__parseVariable__given_variable_defined_in_protocol__reports_variable_throwability),
        ("Parser__parseVariable__given_variable_with_initial_value__extracts_default_value", Parser__parseVariable__given_variable_with_initial_value__extracts_default_value),
        ("Parser__parseVariable__given_variable_with_initial_value__extracts_property_with_default_initializer_correctly", Parser__parseVariable__given_variable_with_initial_value__extracts_property_with_default_initializer_correctly),
        ("Parser__parseVariable__given_variable_with_initial_value__extracts_property_with_literal_value_correctrly", Parser__parseVariable__given_variable_with_initial_value__extracts_property_with_literal_value_correctrly),
        ("Parser__parseVariable__given_variable_with_initial_value__extracts_property_with_array_literal_value_correctly", Parser__parseVariable__given_variable_with_initial_value__extracts_property_with_array_literal_value_correctly),
        ("Parser__parseVariable__given_variable_with_initial_value__extracts_property_with_dictionary_literal_value_correctly", Parser__parseVariable__given_variable_with_initial_value__extracts_property_with_dictionary_literal_value_correctly),
        ("Parser__parseVariable__given_variable_with_initial_value__matches_inference_with_parser_tuple", Parser__parseVariable__given_variable_with_initial_value__matches_inference_with_parser_tuple),
        ("Parser__parseVariable__given_variable_with_initial_value__extracts_property_with_tuple_literal_value_correctly", Parser__parseVariable__given_variable_with_initial_value__extracts_property_with_tuple_literal_value_correctly),
        ("Parser__parseVariable__given_it_has_sourcery_annotations__extracts_single_annotation", Parser__parseVariable__given_it_has_sourcery_annotations__extracts_single_annotation),
        ("Parser__parseVariable__given_it_has_sourcery_annotations__extracts_multiple_annotations_on_the_same_line", Parser__parseVariable__given_it_has_sourcery_annotations__extracts_multiple_annotations_on_the_same_line),
        ("Parser__parseVariable__given_it_has_sourcery_annotations__extracts_multi_line_annotations__including_numbers", Parser__parseVariable__given_it_has_sourcery_annotations__extracts_multi_line_annotations__including_numbers),
        ("Parser__parseVariable__given_it_has_sourcery_annotations__extracts_annotations_interleaved_with_comments", Parser__parseVariable__given_it_has_sourcery_annotations__extracts_annotations_interleaved_with_comments),
        ("Parser__parseVariable__given_it_has_sourcery_annotations__stops_extracting_annotations_if_it_encounters_a_non_comment_line", Parser__parseVariable__given_it_has_sourcery_annotations__stops_extracting_annotations_if_it_encounters_a_non_comment_line),
        ("Parser__parseVariable__given_it_has_sourcery_annotations__separates_comments_correctly_from_variable_name", Parser__parseVariable__given_it_has_sourcery_annotations__separates_comments_correctly_from_variable_name),
        ("Parser__parseVariable__given_it_has_sourcery_annotations__extracts_trailing_annotations", Parser__parseVariable__given_it_has_sourcery_annotations__extracts_trailing_annotations),
    ]
}

extension GeneratorSpec {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__GeneratorSpec = [
        ("Generator__generates_types_all_by_skipping_protocols", Generator__generates_types_all_by_skipping_protocols),
        ("Generator__generates_types_protocols", Generator__generates_types_protocols),
        ("Generator__generates_types_classes", Generator__generates_types_classes),
        ("Generator__generates_types_structs", Generator__generates_types_structs),
        ("Generator__generates_types_enums", Generator__generates_types_enums),
        ("Generator__generates_types_extensions", Generator__generates_types_extensions),
        ("Generator__feeds_types_implementing_specific_protocol", Generator__feeds_types_implementing_specific_protocol),
        ("Generator__feeds_types_inheriting_specific_class", Generator__feeds_types_inheriting_specific_class),
        ("Generator__feeds_types_based_specific_type_or_protocol", Generator__feeds_types_based_specific_type_or_protocol),
        ("Generator__feeds_types_extends_specific_type_or_protocol", Generator__feeds_types_extends_specific_type_or_protocol),
        ("Generator__accessing_specific_type_via_type_Typename__can_render_accessLevel", Generator__accessing_specific_type_via_type_Typename__can_render_accessLevel),
        ("Generator__accessing_specific_type_via_type_Typename__can_access_supertype", Generator__accessing_specific_type_via_type_Typename__can_access_supertype),
        ("Generator__accessing_specific_type_via_type_Typename__counts_all_variables_including_implements__inherits", Generator__accessing_specific_type_via_type_Typename__counts_all_variables_including_implements__inherits),
        ("Generator__accessing_specific_type_via_type_Typename__can_use_annotations_filter", Generator__accessing_specific_type_via_type_Typename__can_use_annotations_filter),
        ("Generator__accessing_specific_type_via_type_Typename__can_use_filter_on_variables", Generator__accessing_specific_type_via_type_Typename__can_use_filter_on_variables),
        ("Generator__accessing_specific_type_via_type_Typename__can_use_filter_on_methods", Generator__accessing_specific_type_via_type_Typename__can_use_filter_on_methods),
        ("Generator__accessing_specific_type_via_type_Typename__can_use_access_level_filter_on_types", Generator__accessing_specific_type_via_type_Typename__can_use_access_level_filter_on_types),
        ("Generator__accessing_specific_type_via_type_Typename__can_use_access_level_filter_on_methods", Generator__accessing_specific_type_via_type_Typename__can_use_access_level_filter_on_methods),
        ("Generator__accessing_specific_type_via_type_Typename__can_use_access_level_filter_on_variables", Generator__accessing_specific_type_via_type_Typename__can_use_access_level_filter_on_variables),
        ("Generator__accessing_specific_type_via_type_Typename__can_use_definedInExtension_filter_on_variables", Generator__accessing_specific_type_via_type_Typename__can_use_definedInExtension_filter_on_variables),
        ("Generator__accessing_specific_type_via_type_Typename__can_use_definedInExtension_filter_on_methods", Generator__accessing_specific_type_via_type_Typename__can_use_definedInExtension_filter_on_methods),
        ("Generator__accessing_specific_type_via_type_Typename__generates_type_TypeName", Generator__accessing_specific_type_via_type_Typename__generates_type_TypeName),
        ("Generator__accessing_specific_type_via_type_Typename__generates_contained_types_properly__type_ParentType_ContainedType_properly", Generator__accessing_specific_type_via_type_Typename__generates_contained_types_properly__type_ParentType_ContainedType_properly),
        ("Generator__accessing_specific_type_via_type_Typename__generates_enum_properly", Generator__accessing_specific_type_via_type_Typename__generates_enum_properly),
        ("Generator__accessing_specific_type_via_type_Typename__classifies_computed_properties_properly", Generator__accessing_specific_type_via_type_Typename__classifies_computed_properties_properly),
        ("Generator__accessing_specific_type_via_type_Typename__can_access_variable_type_information", Generator__accessing_specific_type_via_type_Typename__can_access_variable_type_information),
        ("Generator__accessing_specific_type_via_type_Typename__can_render_variable_isOptional", Generator__accessing_specific_type_via_type_Typename__can_render_variable_isOptional),
        ("Generator__accessing_specific_type_via_type_Typename__can_render_variable_definedInType", Generator__accessing_specific_type_via_type_Typename__can_render_variable_definedInType),
        ("Generator__accessing_specific_type_via_type_Typename__can_render_method_definedInType", Generator__accessing_specific_type_via_type_Typename__can_render_method_definedInType),
        ("Generator__accessing_specific_type_via_type_Typename__generates_proper_response_for_type_inherits", Generator__accessing_specific_type_via_type_Typename__generates_proper_response_for_type_inherits),
        ("Generator__accessing_specific_type_via_type_Typename__generates_proper_response_for_type_implements", Generator__accessing_specific_type_via_type_Typename__generates_proper_response_for_type_implements),
        ("Generator__accessing_specific_type_via_type_Typename__generates_proper_response_for_type_based", Generator__accessing_specific_type_via_type_Typename__generates_proper_response_for_type_based),
        ("Generator__accessing_specific_type_via_type_Typename__given_tuple_variable__can_access_tuple_elements", Generator__accessing_specific_type_via_type_Typename__given_tuple_variable__can_access_tuple_elements),
        ("Generator__accessing_specific_type_via_type_Typename__given_tuple_variable__can_access_tuple_element_type_metadata", Generator__accessing_specific_type_via_type_Typename__given_tuple_variable__can_access_tuple_element_type_metadata),
        ("Generator__given_additional_arguments__can_reflect_them", Generator__given_additional_arguments__can_reflect_them),
        ("Generator__given_additional_arguments__parses_numbers_correctly", Generator__given_additional_arguments__parses_numbers_correctly),
    ]
}

extension JavaScriptTemplateTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__JavaScriptTemplateTests = [
        ("JavaScriptTemplate__generates_correct_output", JavaScriptTemplate__generates_correct_output),
        ("JavaScriptTemplate__handles_includes", JavaScriptTemplate__handles_includes),
        ("JavaScriptTemplate__handles_includes_from_included_files_relatively", JavaScriptTemplate__handles_includes_from_included_files_relatively),
        ("JavaScriptTemplate__rethrows_template_parsing_errors", JavaScriptTemplate__rethrows_template_parsing_errors),
        ("JavaScriptTemplate__rethrows_template_runtime_errors", JavaScriptTemplate__rethrows_template_runtime_errors),
        ("JavaScriptTemplate__throws_unknown_property_exception", JavaScriptTemplate__throws_unknown_property_exception),
        ("JavaScriptTemplate__handles_free_functions", JavaScriptTemplate__handles_free_functions),
    ]
}

extension MethodSpec {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__MethodSpec = [
        ("Method__reports_short_name_properly", Method__reports_short_name_properly),
        ("Method__reports_definedInTypeName_propertly", Method__reports_definedInTypeName_propertly),
        ("Method__reports_actualDefinedInTypeName_propertly", Method__reports_actualDefinedInTypeName_propertly),
        ("Method__reports_isDeinitializer_properly", Method__reports_isDeinitializer_properly),
        ("Method__reports_isInitializer_properly", Method__reports_isInitializer_properly),
        ("Method__reports_failable_initializer_return_type_as_optional", Method__reports_failable_initializer_return_type_as_optional),
        ("Method__reports_generic_method", Method__reports_generic_method),
        ("Method__When_testing_equality__given_same_items__is_equal", Method__When_testing_equality__given_same_items__is_equal),
        ("Method__When_testing_equality__given_different_items__is_not_equal", Method__When_testing_equality__given_different_items__is_not_equal),
        ("MethodParameter__given_default_initializer_parameters__has_empty_name", MethodParameter__given_default_initializer_parameters__has_empty_name),
        ("MethodParameter__given_default_initializer_parameters__has_empty_argumentLabel", MethodParameter__given_default_initializer_parameters__has_empty_argumentLabel),
        ("MethodParameter__given_default_initializer_parameters__has_no_type", MethodParameter__given_default_initializer_parameters__has_no_type),
        ("MethodParameter__given_default_initializer_parameters__has_not_default_value", MethodParameter__given_default_initializer_parameters__has_not_default_value),
        ("MethodParameter__given_default_initializer_parameters__has_no_annotations", MethodParameter__given_default_initializer_parameters__has_no_annotations),
        ("MethodParameter__given_default_initializer_parameters__is_not_inout", MethodParameter__given_default_initializer_parameters__is_not_inout),
        ("MethodParameter__given_method_parameter_with_attributes__returns_unwrapped_type_name", MethodParameter__given_method_parameter_with_attributes__returns_unwrapped_type_name),
        ("MethodParameter__when_inout__is_inout", MethodParameter__when_inout__is_inout),
        ("MethodParameter__when_testing_equality__given_same_items__is_equal", MethodParameter__when_testing_equality__given_same_items__is_equal),
        ("MethodParameter__when_testing_equality__given_different_items__is_not_equal", MethodParameter__when_testing_equality__given_different_items__is_not_equal),
    ]
}

extension ParserComposerSpec {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ParserComposerSpec = [
        ("ParserComposer__uniqueTypesAndFunctions__given_class_hierarchy__resolves_methods_definedInType", ParserComposer__uniqueTypesAndFunctions__given_class_hierarchy__resolves_methods_definedInType),
        ("ParserComposer__uniqueTypesAndFunctions__given_class_hierarchy__resolves_variables_definedInType", ParserComposer__uniqueTypesAndFunctions__given_class_hierarchy__resolves_variables_definedInType),
        ("ParserComposer__uniqueTypesAndFunctions__given_class_hierarchy__given_method_with_return_type__finds_actual_return_type", ParserComposer__uniqueTypesAndFunctions__given_class_hierarchy__given_method_with_return_type__finds_actual_return_type),
        ("ParserComposer__uniqueTypesAndFunctions__given_class_hierarchy__given_generic_method__extracts_class_method_properly", ParserComposer__uniqueTypesAndFunctions__given_class_hierarchy__given_generic_method__extracts_class_method_properly),
        ("ParserComposer__uniqueTypesAndFunctions__given_class_hierarchy__given_generic_method__extracts_protocol_method_properly", ParserComposer__uniqueTypesAndFunctions__given_class_hierarchy__given_generic_method__extracts_protocol_method_properly),
        ("ParserComposer__uniqueTypesAndFunctions__given_class_hierarchy__given_initializer__extracts_initializer_properly", ParserComposer__uniqueTypesAndFunctions__given_class_hierarchy__given_initializer__extracts_initializer_properly),
        ("ParserComposer__uniqueTypesAndFunctions__given_class_hierarchy__given_initializer__extracts_failable_initializer_properly", ParserComposer__uniqueTypesAndFunctions__given_class_hierarchy__given_initializer__extracts_failable_initializer_properly),
        ("ParserComposer__uniqueTypesAndFunctions__given_protocol_inheritance__flattens_protocol_with_default_implementation_as_expected", ParserComposer__uniqueTypesAndFunctions__given_protocol_inheritance__flattens_protocol_with_default_implementation_as_expected),
        ("ParserComposer__uniqueTypesAndFunctions__given_protocol_inheritance__flattens_inherited_protocols_with_default_implementation_as_expected", ParserComposer__uniqueTypesAndFunctions__given_protocol_inheritance__flattens_inherited_protocols_with_default_implementation_as_expected),
        ("ParserComposer__uniqueTypesAndFunctions__given_overlapping_protocol_inheritance__finds_right_types", ParserComposer__uniqueTypesAndFunctions__given_overlapping_protocol_inheritance__finds_right_types),
        ("ParserComposer__uniqueTypesAndFunctions__given_overlapping_protocol_inheritance__has_matching_number_of_methods_and_variables", ParserComposer__uniqueTypesAndFunctions__given_overlapping_protocol_inheritance__has_matching_number_of_methods_and_variables),
        ("ParserComposer__uniqueTypesAndFunctions__given_extension_of_same_type__combines_nested_types_correctly", ParserComposer__uniqueTypesAndFunctions__given_extension_of_same_type__combines_nested_types_correctly),
        ("ParserComposer__uniqueTypesAndFunctions__given_extension_of_same_type__combines_methods_correctly", ParserComposer__uniqueTypesAndFunctions__given_extension_of_same_type__combines_methods_correctly),
        ("ParserComposer__uniqueTypesAndFunctions__given_extension_of_same_type__combines_variables_correctly", ParserComposer__uniqueTypesAndFunctions__given_extension_of_same_type__combines_variables_correctly),
        ("ParserComposer__uniqueTypesAndFunctions__given_extension_of_same_type__combines_variables_and_methods_with_access_information_from_the_extension", ParserComposer__uniqueTypesAndFunctions__given_extension_of_same_type__combines_variables_and_methods_with_access_information_from_the_extension),
        ("ParserComposer__uniqueTypesAndFunctions__given_extension_of_same_type__combines_inherited_types", ParserComposer__uniqueTypesAndFunctions__given_extension_of_same_type__combines_inherited_types),
        ("ParserComposer__uniqueTypesAndFunctions__given_extension_of_same_type__does_not_use_extension_to_infer_enum_rawType", ParserComposer__uniqueTypesAndFunctions__given_extension_of_same_type__does_not_use_extension_to_infer_enum_rawType),
        ("ParserComposer__uniqueTypesAndFunctions__given_extension_of_same_type__remembers_original_definition_type__for_enum__resolves_methods_definedInType", ParserComposer__uniqueTypesAndFunctions__given_extension_of_same_type__remembers_original_definition_type__for_enum__resolves_methods_definedInType),
        ("ParserComposer__uniqueTypesAndFunctions__given_extension_of_same_type__remembers_original_definition_type__for_protocol__resolves_methods_definedInType", ParserComposer__uniqueTypesAndFunctions__given_extension_of_same_type__remembers_original_definition_type__for_protocol__resolves_methods_definedInType),
        ("ParserComposer__uniqueTypesAndFunctions__given_extension_of_same_type__remembers_original_definition_type__for_class__resolves_methods_definedInType", ParserComposer__uniqueTypesAndFunctions__given_extension_of_same_type__remembers_original_definition_type__for_class__resolves_methods_definedInType),
        ("ParserComposer__uniqueTypesAndFunctions__given_extension_of_same_type__remembers_original_definition_type__for_struct__resolves_methods_definedInType", ParserComposer__uniqueTypesAndFunctions__given_extension_of_same_type__remembers_original_definition_type__for_struct__resolves_methods_definedInType),
        ("ParserComposer__uniqueTypesAndFunctions__given_enum_containing_associated_values__trims_whitespace_from_associated_value_names", ParserComposer__uniqueTypesAndFunctions__given_enum_containing_associated_values__trims_whitespace_from_associated_value_names),
        ("ParserComposer__uniqueTypesAndFunctions__given_enum_containing_rawType__extracts_enums_without_RawRepresentable", ParserComposer__uniqueTypesAndFunctions__given_enum_containing_rawType__extracts_enums_without_RawRepresentable),
        ("ParserComposer__uniqueTypesAndFunctions__given_enum_containing_rawType__extracts_enums_with_RawRepresentable_by_inferring_from_variable", ParserComposer__uniqueTypesAndFunctions__given_enum_containing_rawType__extracts_enums_with_RawRepresentable_by_inferring_from_variable),
        ("ParserComposer__uniqueTypesAndFunctions__given_enum_containing_rawType__extracts_enums_with_RawRepresentable_by_inferring_from_variable_with_typealias", ParserComposer__uniqueTypesAndFunctions__given_enum_containing_rawType__extracts_enums_with_RawRepresentable_by_inferring_from_variable_with_typealias),
        ("ParserComposer__uniqueTypesAndFunctions__given_enum_containing_rawType__extracts_enums_with_RawRepresentable_by_inferring_from_typealias", ParserComposer__uniqueTypesAndFunctions__given_enum_containing_rawType__extracts_enums_with_RawRepresentable_by_inferring_from_typealias),
        ("ParserComposer__uniqueTypesAndFunctions__given_enum_without_raw_type_with_inheriting_type__does_not_set_inherited_type_to_raw_value_type_for_enum_cases", ParserComposer__uniqueTypesAndFunctions__given_enum_without_raw_type_with_inheriting_type__does_not_set_inherited_type_to_raw_value_type_for_enum_cases),
        ("ParserComposer__uniqueTypesAndFunctions__given_enum_without_raw_type_with_inheriting_type__does_not_set_inherited_type_to_raw_value_type_for_enum_cases_with_associated_values_", ParserComposer__uniqueTypesAndFunctions__given_enum_without_raw_type_with_inheriting_type__does_not_set_inherited_type_to_raw_value_type_for_enum_cases_with_associated_values_),
        ("ParserComposer__uniqueTypesAndFunctions__given_enum_without_raw_type_with_inheriting_type__does_not_set_inherited_type_to_raw_value_type_for_enum_with_no_cases", ParserComposer__uniqueTypesAndFunctions__given_enum_without_raw_type_with_inheriting_type__does_not_set_inherited_type_to_raw_value_type_for_enum_with_no_cases),
        ("ParserComposer__uniqueTypesAndFunctions__given_enum_inheriting_protocol_composition__extracts_the_protocol_composition_as_the_inherited_type", ParserComposer__uniqueTypesAndFunctions__given_enum_inheriting_protocol_composition__extracts_the_protocol_composition_as_the_inherited_type),
        ("ParserComposer__uniqueTypesAndFunctions__given_generic_custom_type__extracts_genericTypeName_correctly", ParserComposer__uniqueTypesAndFunctions__given_generic_custom_type__extracts_genericTypeName_correctly),
        ("ParserComposer__uniqueTypesAndFunctions__given_tuple_type__extracts_elements_properly", ParserComposer__uniqueTypesAndFunctions__given_tuple_type__extracts_elements_properly),
        ("ParserComposer__uniqueTypesAndFunctions__given_literal_array_type__extracts_element_type_properly", ParserComposer__uniqueTypesAndFunctions__given_literal_array_type__extracts_element_type_properly),
        ("ParserComposer__uniqueTypesAndFunctions__given_generic_array_type__extracts_element_type_properly", ParserComposer__uniqueTypesAndFunctions__given_generic_array_type__extracts_element_type_properly),
        ("ParserComposer__uniqueTypesAndFunctions__given_generic_dictionary_type__extracts_key_type_properly", ParserComposer__uniqueTypesAndFunctions__given_generic_dictionary_type__extracts_key_type_properly),
        ("ParserComposer__uniqueTypesAndFunctions__given_generic_types_extensions__detects_protocol_conformance_in_extension_of_generic_types", ParserComposer__uniqueTypesAndFunctions__given_generic_types_extensions__detects_protocol_conformance_in_extension_of_generic_types),
        ("ParserComposer__uniqueTypesAndFunctions__given_literal_dictionary_type__extracts_key_type_properly", ParserComposer__uniqueTypesAndFunctions__given_literal_dictionary_type__extracts_key_type_properly),
        ("ParserComposer__uniqueTypesAndFunctions__given_closure_type__extracts_closure_return_type", ParserComposer__uniqueTypesAndFunctions__given_closure_type__extracts_closure_return_type),
        ("ParserComposer__uniqueTypesAndFunctions__given_closure_type__extracts_throws_return_type", ParserComposer__uniqueTypesAndFunctions__given_closure_type__extracts_throws_return_type),
        ("ParserComposer__uniqueTypesAndFunctions__given_closure_type__extracts_void_return_type", ParserComposer__uniqueTypesAndFunctions__given_closure_type__extracts_void_return_type),
        ("ParserComposer__uniqueTypesAndFunctions__given_closure_type__extracts____return_type", ParserComposer__uniqueTypesAndFunctions__given_closure_type__extracts____return_type),
        ("ParserComposer__uniqueTypesAndFunctions__given_closure_type__extracts_complex_closure_type", ParserComposer__uniqueTypesAndFunctions__given_closure_type__extracts_complex_closure_type),
        ("ParserComposer__uniqueTypesAndFunctions__given_closure_type__extracts____parameters", ParserComposer__uniqueTypesAndFunctions__given_closure_type__extracts____parameters),
        ("ParserComposer__uniqueTypesAndFunctions__given_closure_type__extracts_Void_parameters", ParserComposer__uniqueTypesAndFunctions__given_closure_type__extracts_Void_parameters),
        ("ParserComposer__uniqueTypesAndFunctions__given_closure_type__extracts_parameters", ParserComposer__uniqueTypesAndFunctions__given_closure_type__extracts_parameters),
        ("ParserComposer__uniqueTypesAndFunctions__given_Self_instead_of_type_name__replaces_variable_types_with_actual_types", ParserComposer__uniqueTypesAndFunctions__given_Self_instead_of_type_name__replaces_variable_types_with_actual_types),
        ("ParserComposer__uniqueTypesAndFunctions__given_Self_instead_of_type_name__replaces_method_types_with_actual_types", ParserComposer__uniqueTypesAndFunctions__given_Self_instead_of_type_name__replaces_method_types_with_actual_types),
        ("ParserComposer__uniqueTypesAndFunctions__given_typealiases__resolves_definedInType_for_methods", ParserComposer__uniqueTypesAndFunctions__given_typealiases__resolves_definedInType_for_methods),
        ("ParserComposer__uniqueTypesAndFunctions__given_typealiases__resolves_definedInType_for_variables", ParserComposer__uniqueTypesAndFunctions__given_typealiases__resolves_definedInType_for_variables),
        ("ParserComposer__uniqueTypesAndFunctions__given_typealiases__sets_typealias_type", ParserComposer__uniqueTypesAndFunctions__given_typealiases__sets_typealias_type),
        ("ParserComposer__uniqueTypesAndFunctions__given_typealiases__replaces_variable_alias_with_actual_type_via_3_typealiases", ParserComposer__uniqueTypesAndFunctions__given_typealiases__replaces_variable_alias_with_actual_type_via_3_typealiases),
        ("ParserComposer__uniqueTypesAndFunctions__given_typealiases__replaces_variable_optional_alias_type_with_actual_type", ParserComposer__uniqueTypesAndFunctions__given_typealiases__replaces_variable_optional_alias_type_with_actual_type),
        ("ParserComposer__uniqueTypesAndFunctions__given_typealiases__extends_actual_type_with_type_alias_extension", ParserComposer__uniqueTypesAndFunctions__given_typealiases__extends_actual_type_with_type_alias_extension),
        ("ParserComposer__uniqueTypesAndFunctions__given_typealiases__updates_inheritedTypes_with_real_type_name", ParserComposer__uniqueTypesAndFunctions__given_typealiases__updates_inheritedTypes_with_real_type_name),
        ("ParserComposer__uniqueTypesAndFunctions__given_typealiases__Updated_composer__follows_through_typealias_chain_to_final_type", ParserComposer__uniqueTypesAndFunctions__given_typealiases__Updated_composer__follows_through_typealias_chain_to_final_type),
        ("ParserComposer__uniqueTypesAndFunctions__given_typealiases__Updated_composer__follows_through_typealias_chain_contained_in_types_to_final_type", ParserComposer__uniqueTypesAndFunctions__given_typealiases__Updated_composer__follows_through_typealias_chain_contained_in_types_to_final_type),
        ("ParserComposer__uniqueTypesAndFunctions__given_typealiases__Updated_composer__follows_through_typealias_chain_contained_in_different_modules_to_final_type", ParserComposer__uniqueTypesAndFunctions__given_typealiases__Updated_composer__follows_through_typealias_chain_contained_in_different_modules_to_final_type),
        ("ParserComposer__uniqueTypesAndFunctions__given_typealiases__Updated_composer__gathers_full_type_information_if_a_type_is_defined_on_an_typealiased_unknown_parent_via_extension", ParserComposer__uniqueTypesAndFunctions__given_typealiases__Updated_composer__gathers_full_type_information_if_a_type_is_defined_on_an_typealiased_unknown_parent_via_extension),
        ("ParserComposer__uniqueTypesAndFunctions__given_typealiases__Updated_composer__extends_the_actual_type_when_using_typealias", ParserComposer__uniqueTypesAndFunctions__given_typealiases__Updated_composer__extends_the_actual_type_when_using_typealias),
        ("ParserComposer__uniqueTypesAndFunctions__given_typealiases__Updated_composer__resolves_inheritance_chain_via_typealias", ParserComposer__uniqueTypesAndFunctions__given_typealiases__Updated_composer__resolves_inheritance_chain_via_typealias),
        ("ParserComposer__uniqueTypesAndFunctions__given_typealiases__given_variable__replaces_variable_alias_type_with_actual_type", ParserComposer__uniqueTypesAndFunctions__given_typealiases__given_variable__replaces_variable_alias_type_with_actual_type),
        ("ParserComposer__uniqueTypesAndFunctions__given_typealiases__given_variable__replaces_tuple_elements_alias_types_with_actual_types", ParserComposer__uniqueTypesAndFunctions__given_typealiases__given_variable__replaces_tuple_elements_alias_types_with_actual_types),
        ("ParserComposer__uniqueTypesAndFunctions__given_typealiases__given_variable__replaces_variable_alias_type_with_actual_tuple_type_name", ParserComposer__uniqueTypesAndFunctions__given_typealiases__given_variable__replaces_variable_alias_type_with_actual_tuple_type_name),
        ("ParserComposer__uniqueTypesAndFunctions__given_typealiases__given_method_return_value_type__replaces_method_return_type_alias_with_actual_type", ParserComposer__uniqueTypesAndFunctions__given_typealiases__given_method_return_value_type__replaces_method_return_type_alias_with_actual_type),
        ("ParserComposer__uniqueTypesAndFunctions__given_typealiases__given_method_return_value_type__replaces_tuple_elements_alias_types_with_actual_types", ParserComposer__uniqueTypesAndFunctions__given_typealiases__given_method_return_value_type__replaces_tuple_elements_alias_types_with_actual_types),
        ("ParserComposer__uniqueTypesAndFunctions__given_typealiases__given_method_return_value_type__replaces_method_return_type_alias_with_actual_tuple_type_name", ParserComposer__uniqueTypesAndFunctions__given_typealiases__given_method_return_value_type__replaces_method_return_type_alias_with_actual_tuple_type_name),
        ("ParserComposer__uniqueTypesAndFunctions__given_typealiases__given_method_parameter__replaces_method_parameter_type_alias_with_actual_type", ParserComposer__uniqueTypesAndFunctions__given_typealiases__given_method_parameter__replaces_method_parameter_type_alias_with_actual_type),
        ("ParserComposer__uniqueTypesAndFunctions__given_typealiases__given_method_parameter__replaces_tuple_tuple_elements_alias_types_with_actual_types", ParserComposer__uniqueTypesAndFunctions__given_typealiases__given_method_parameter__replaces_tuple_tuple_elements_alias_types_with_actual_types),
        ("ParserComposer__uniqueTypesAndFunctions__given_typealiases__given_method_parameter__replaces_method_parameter_alias_type_with_actual_tuple_type_name", ParserComposer__uniqueTypesAndFunctions__given_typealiases__given_method_parameter__replaces_method_parameter_alias_type_with_actual_tuple_type_name),
        ("ParserComposer__uniqueTypesAndFunctions__given_typealiases__given_enum_case_associated_value__replaces_enum_case_associated_value_type_alias_with_actual_type", ParserComposer__uniqueTypesAndFunctions__given_typealiases__given_enum_case_associated_value__replaces_enum_case_associated_value_type_alias_with_actual_type),
        ("ParserComposer__uniqueTypesAndFunctions__given_typealiases__given_enum_case_associated_value__replaces_tuple_type_elements_alias_types_with_actual_type", ParserComposer__uniqueTypesAndFunctions__given_typealiases__given_enum_case_associated_value__replaces_tuple_type_elements_alias_types_with_actual_type),
        ("ParserComposer__uniqueTypesAndFunctions__given_typealiases__given_enum_case_associated_value__replaces_associated_value_alias_type_with_actual_tuple_type_name", ParserComposer__uniqueTypesAndFunctions__given_typealiases__given_enum_case_associated_value__replaces_associated_value_alias_type_with_actual_tuple_type_name),
        ("ParserComposer__uniqueTypesAndFunctions__given_typealiases__given_enum_case_associated_value__replaces_associated_value_alias_type_with_actual_dictionary_type_name", ParserComposer__uniqueTypesAndFunctions__given_typealiases__given_enum_case_associated_value__replaces_associated_value_alias_type_with_actual_dictionary_type_name),
        ("ParserComposer__uniqueTypesAndFunctions__given_typealiases__given_enum_case_associated_value__replaces_associated_value_alias_type_with_actual_array_type_name", ParserComposer__uniqueTypesAndFunctions__given_typealiases__given_enum_case_associated_value__replaces_associated_value_alias_type_with_actual_array_type_name),
        ("ParserComposer__uniqueTypesAndFunctions__given_typealiases__given_enum_case_associated_value__replaces_associated_value_alias_type_with_actual_closure_type_name", ParserComposer__uniqueTypesAndFunctions__given_typealiases__given_enum_case_associated_value__replaces_associated_value_alias_type_with_actual_closure_type_name),
        ("ParserComposer__uniqueTypesAndFunctions__given_typealiases__given_global_protocol_composition__replaces_variable_alias_type_with_protocol_composition_types", ParserComposer__uniqueTypesAndFunctions__given_typealiases__given_global_protocol_composition__replaces_variable_alias_type_with_protocol_composition_types),
        ("ParserComposer__uniqueTypesAndFunctions__given_typealiases__given_global_protocol_composition__should_deconstruct_compositions_of_protocols_for_implements", ParserComposer__uniqueTypesAndFunctions__given_typealiases__given_global_protocol_composition__should_deconstruct_compositions_of_protocols_for_implements),
        ("ParserComposer__uniqueTypesAndFunctions__given_typealiases__given_global_protocol_composition__should_deconstruct_compositions_of_protocols_and_classes_for_implements_and_inherits", ParserComposer__uniqueTypesAndFunctions__given_typealiases__given_global_protocol_composition__should_deconstruct_compositions_of_protocols_and_classes_for_implements_and_inherits),
        ("ParserComposer__uniqueTypesAndFunctions__given_typealiases__given_local_typealias__replaces_variable_alias_type_with_actual_type", ParserComposer__uniqueTypesAndFunctions__given_typealiases__given_local_typealias__replaces_variable_alias_type_with_actual_type),
        ("ParserComposer__uniqueTypesAndFunctions__given_typealiases__given_local_typealias__replaces_variable_alias_type_with_actual_contained_type", ParserComposer__uniqueTypesAndFunctions__given_typealiases__given_local_typealias__replaces_variable_alias_type_with_actual_contained_type),
        ("ParserComposer__uniqueTypesAndFunctions__given_typealiases__given_local_typealias__replaces_variable_alias_type_with_actual_foreign_contained_type", ParserComposer__uniqueTypesAndFunctions__given_typealiases__given_local_typealias__replaces_variable_alias_type_with_actual_foreign_contained_type),
        ("ParserComposer__uniqueTypesAndFunctions__given_typealiases__given_local_typealias__populates_the_local_collection_of_typealiases", ParserComposer__uniqueTypesAndFunctions__given_typealiases__given_local_typealias__populates_the_local_collection_of_typealiases),
        ("ParserComposer__uniqueTypesAndFunctions__given_typealiases__given_local_typealias__populates_the_global_collection_of_typealiases", ParserComposer__uniqueTypesAndFunctions__given_typealiases__given_local_typealias__populates_the_global_collection_of_typealiases),
        ("ParserComposer__uniqueTypesAndFunctions__given_typealiases__given_global_typealias__extracts_typealiases_of_other_typealiases", ParserComposer__uniqueTypesAndFunctions__given_typealiases__given_global_typealias__extracts_typealiases_of_other_typealiases),
        ("ParserComposer__uniqueTypesAndFunctions__given_typealiases__given_global_typealias__extracts_typealiases_of_other_typealiases_of_a_type", ParserComposer__uniqueTypesAndFunctions__given_typealiases__given_global_typealias__extracts_typealiases_of_other_typealiases_of_a_type),
        ("ParserComposer__uniqueTypesAndFunctions__given_typealiases__given_global_typealias__resolves_types_transitively", ParserComposer__uniqueTypesAndFunctions__given_typealiases__given_global_typealias__resolves_types_transitively),
        ("ParserComposer__uniqueTypesAndFunctions__given_associated_type__extracts_associated_type_properly_when_constrained_to_a_typealias", ParserComposer__uniqueTypesAndFunctions__given_associated_type__extracts_associated_type_properly_when_constrained_to_a_typealias),
        ("ParserComposer__uniqueTypesAndFunctions__given_associated_type__given_value_with_its_type_known__extracts_associated_value_s_type", ParserComposer__uniqueTypesAndFunctions__given_associated_type__given_value_with_its_type_known__extracts_associated_value_s_type),
        ("ParserComposer__uniqueTypesAndFunctions__given_associated_type__given_value_with_its_type_known__extracts_associated_value_s_optional_type", ParserComposer__uniqueTypesAndFunctions__given_associated_type__given_value_with_its_type_known__extracts_associated_value_s_optional_type),
        ("ParserComposer__uniqueTypesAndFunctions__given_associated_type__given_value_with_its_type_known__extracts_associated_value_s_typealias", ParserComposer__uniqueTypesAndFunctions__given_associated_type__given_value_with_its_type_known__extracts_associated_value_s_typealias),
        ("ParserComposer__uniqueTypesAndFunctions__given_associated_type__given_value_with_its_type_known__extracts_associated_value_s_same__indirect__enum_type", ParserComposer__uniqueTypesAndFunctions__given_associated_type__given_value_with_its_type_known__extracts_associated_value_s_same__indirect__enum_type),
        ("ParserComposer__uniqueTypesAndFunctions__given_nested_type__extracts_method_s_defined_in_properly", ParserComposer__uniqueTypesAndFunctions__given_nested_type__extracts_method_s_defined_in_properly),
        ("ParserComposer__uniqueTypesAndFunctions__given_nested_type__extracts_property_of_nested_generic_type_properly", ParserComposer__uniqueTypesAndFunctions__given_nested_type__extracts_property_of_nested_generic_type_properly),
        ("ParserComposer__uniqueTypesAndFunctions__given_nested_type__extracts_property_of_nested_type_properly", ParserComposer__uniqueTypesAndFunctions__given_nested_type__extracts_property_of_nested_type_properly),
        ("ParserComposer__uniqueTypesAndFunctions__given_nested_type__extracts_property_of_nested_type_array_properly", ParserComposer__uniqueTypesAndFunctions__given_nested_type__extracts_property_of_nested_type_array_properly),
        ("ParserComposer__uniqueTypesAndFunctions__given_nested_type__extracts_property_of_nested_type_dictionary_properly", ParserComposer__uniqueTypesAndFunctions__given_nested_type__extracts_property_of_nested_type_dictionary_properly),
        ("ParserComposer__uniqueTypesAndFunctions__given_nested_type__extracts_property_of_nested_type_tuple_properly", ParserComposer__uniqueTypesAndFunctions__given_nested_type__extracts_property_of_nested_type_tuple_properly),
        ("ParserComposer__uniqueTypesAndFunctions__given_nested_type__resolves_protocol_generic_requirement_types_and_inherits_associated_types", ParserComposer__uniqueTypesAndFunctions__given_nested_type__resolves_protocol_generic_requirement_types_and_inherits_associated_types),
        ("ParserComposer__uniqueTypesAndFunctions__given_types_within_modules__doesn_t_automatically_add_module_name_to_unknown_types_but_keeps_the_info_in_the_AST_via_module_property", ParserComposer__uniqueTypesAndFunctions__given_types_within_modules__doesn_t_automatically_add_module_name_to_unknown_types_but_keeps_the_info_in_the_AST_via_module_property),
        ("ParserComposer__uniqueTypesAndFunctions__given_types_within_modules__combines_unknown_extensions_correctly", ParserComposer__uniqueTypesAndFunctions__given_types_within_modules__combines_unknown_extensions_correctly),
        ("ParserComposer__uniqueTypesAndFunctions__given_types_within_modules__combines_unknown_extensions_from_different_files_correctly", ParserComposer__uniqueTypesAndFunctions__given_types_within_modules__combines_unknown_extensions_from_different_files_correctly),
        ("ParserComposer__uniqueTypesAndFunctions__given_types_within_modules__combines_known_types_with_extensions_correctly", ParserComposer__uniqueTypesAndFunctions__given_types_within_modules__combines_known_types_with_extensions_correctly),
        ("ParserComposer__uniqueTypesAndFunctions__given_types_within_modules__when_using_global_names__extends_type_with_extension", ParserComposer__uniqueTypesAndFunctions__given_types_within_modules__when_using_global_names__extends_type_with_extension),
        ("ParserComposer__uniqueTypesAndFunctions__given_types_within_modules__when_using_global_names__resolves_variable_type", ParserComposer__uniqueTypesAndFunctions__given_types_within_modules__when_using_global_names__resolves_variable_type),
        ("ParserComposer__uniqueTypesAndFunctions__given_types_within_modules__when_using_global_names__resolves_variable_defined_in_type", ParserComposer__uniqueTypesAndFunctions__given_types_within_modules__when_using_global_names__resolves_variable_defined_in_type),
        ("ParserComposer__uniqueTypesAndFunctions__given_types_within_modules__when_using_local_names__resolves_variable_type_properly", ParserComposer__uniqueTypesAndFunctions__given_types_within_modules__when_using_local_names__resolves_variable_type_properly),
        ("ParserComposer__uniqueTypesAndFunctions__given_types_within_modules__when_using_local_names__resolves_variable_type_properly_even_when_using_specialized_imports", ParserComposer__uniqueTypesAndFunctions__given_types_within_modules__when_using_local_names__resolves_variable_type_properly_even_when_using_specialized_imports),
        ("ParserComposer__uniqueTypesAndFunctions__given_types_within_modules__when_using_local_names__throws_error_when_variable_type_is_ambigious", ParserComposer__uniqueTypesAndFunctions__given_types_within_modules__when_using_local_names__throws_error_when_variable_type_is_ambigious),
        ("ParserComposer__uniqueTypesAndFunctions__given_types_within_modules__when_using_local_names__resolves_variable_type_correctly", ParserComposer__uniqueTypesAndFunctions__given_types_within_modules__when_using_local_names__resolves_variable_type_correctly),
        ("ParserComposer__uniqueTypesAndFunctions__given_types_within_modules__when_using_local_names__resolves_variable_type_correctly_when_generics_are_used", ParserComposer__uniqueTypesAndFunctions__given_types_within_modules__when_using_local_names__resolves_variable_type_correctly_when_generics_are_used),
        ("ParserComposer__uniqueTypesAndFunctions__given_free_function__resolves_generic_return_types_properly", ParserComposer__uniqueTypesAndFunctions__given_free_function__resolves_generic_return_types_properly),
        ("ParserComposer__uniqueTypesAndFunctions__given_free_function__resolves_tuple_return_types_properly", ParserComposer__uniqueTypesAndFunctions__given_free_function__resolves_tuple_return_types_properly),
        ("ParserComposer__uniqueTypesAndFunctions__given_nested_types__resolve_extensions_of_nested_type_properly", ParserComposer__uniqueTypesAndFunctions__given_nested_types__resolve_extensions_of_nested_type_properly),
        ("ParserComposer__uniqueTypesAndFunctions__given_nested_types__resolve_extensions_with_nested_types_properly", ParserComposer__uniqueTypesAndFunctions__given_nested_types__resolve_extensions_with_nested_types_properly),
        ("ParserComposer__uniqueTypesAndFunctions__given_nested_types__resolves_extensions_of_nested_types_properly", ParserComposer__uniqueTypesAndFunctions__given_nested_types__resolves_extensions_of_nested_types_properly),
        ("ParserComposer__uniqueTypesAndFunctions__given_protocols_of_the_same_name_in_different_modules__resolves_types_properly", ParserComposer__uniqueTypesAndFunctions__given_protocols_of_the_same_name_in_different_modules__resolves_types_properly),
        ("ParserComposer__uniqueTypesAndFunctions__given_protocols_of_the_same_name_in_different_modules__resolves_inheritance_properly_with_global_type_name", ParserComposer__uniqueTypesAndFunctions__given_protocols_of_the_same_name_in_different_modules__resolves_inheritance_properly_with_global_type_name),
        ("ParserComposer__uniqueTypesAndFunctions__given_protocols_of_the_same_name_in_different_modules__resolves_inheritance_properly_with_local_type_name", ParserComposer__uniqueTypesAndFunctions__given_protocols_of_the_same_name_in_different_modules__resolves_inheritance_properly_with_local_type_name),
    ]
}

extension ProtocolSpec {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ProtocolSpec = [
        ("Protocol__reports_kind_as_protocol", Protocol__reports_kind_as_protocol),
    ]
}

extension SourcerySpecTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__SourcerySpecTests = [
        ("Sourcery__with_already_generated_files__without_changes__doesn_t_update_existing_files", Sourcery__with_already_generated_files__without_changes__doesn_t_update_existing_files),
        ("Sourcery__with_already_generated_files__with_changes__updates_existing_files", Sourcery__with_already_generated_files__with_changes__updates_existing_files),
        ("Sourcery__given_a_single_template__using_inline_generation__replaces_placeholder_with_generated_code", Sourcery__given_a_single_template__using_inline_generation__replaces_placeholder_with_generated_code),
        ("Sourcery__given_a_single_template__using_inline_generation__removes_code_from_within_generated_template", Sourcery__given_a_single_template__using_inline_generation__removes_code_from_within_generated_template),
        ("Sourcery__given_a_single_template__using_inline_generation__does_not_remove_code_from_within_generated_template_when_missing_origin", Sourcery__given_a_single_template__using_inline_generation__does_not_remove_code_from_within_generated_template_when_missing_origin),
        ("Sourcery__given_a_single_template__using_inline_generation__does_not_create_generated_file_with_empty_content", Sourcery__given_a_single_template__using_inline_generation__does_not_create_generated_file_with_empty_content),
        ("Sourcery__given_a_single_template__using_inline_generation__inline_multiple_generated_code_blocks_correctly", Sourcery__given_a_single_template__using_inline_generation__inline_multiple_generated_code_blocks_correctly),
        ("Sourcery__given_a_single_template__using_inline_generation__indents_generated_code_blocks_correctly", Sourcery__given_a_single_template__using_inline_generation__indents_generated_code_blocks_correctly),
        ("Sourcery__given_a_single_template__using_automatic_inline_generation__insert_generated_code_in_the_end_of_type_body", Sourcery__given_a_single_template__using_automatic_inline_generation__insert_generated_code_in_the_end_of_type_body),
        ("Sourcery__given_a_single_template__using_automatic_inline_generation__insert_generated_code_in_the_end_of_type_body_maintaining_identation__accomodates_for_baseIdent", Sourcery__given_a_single_template__using_automatic_inline_generation__insert_generated_code_in_the_end_of_type_body_maintaining_identation__accomodates_for_baseIdent),
        ("Sourcery__given_a_single_template__using_automatic_inline_generation__insert_generated_code_after_the_end_of_type_body_when_using_after_auto", Sourcery__given_a_single_template__using_automatic_inline_generation__insert_generated_code_after_the_end_of_type_body_when_using_after_auto),
        ("Sourcery__given_a_single_template__using_automatic_inline_generation__insert_generated_code_line_before_the_end_of_type_body", Sourcery__given_a_single_template__using_automatic_inline_generation__insert_generated_code_line_before_the_end_of_type_body),
        ("Sourcery__given_a_single_template__using_automatic_inline_generation__handles_UTF16_characters", Sourcery__given_a_single_template__using_automatic_inline_generation__handles_UTF16_characters),
        ("Sourcery__given_a_single_template__using_automatic_inline_generation__handles_previously_generated_code_with_UTF16_characters", Sourcery__given_a_single_template__using_automatic_inline_generation__handles_previously_generated_code_with_UTF16_characters),
        ("Sourcery__given_a_single_template__using_automatic_inline_generation__insert_generated_code_in_multiple_types", Sourcery__given_a_single_template__using_automatic_inline_generation__insert_generated_code_in_multiple_types),
        ("Sourcery__given_a_single_template__using_automatic_inline_generation__insert_same_generated_code_in_multiple_types", Sourcery__given_a_single_template__using_automatic_inline_generation__insert_same_generated_code_in_multiple_types),
        ("Sourcery__given_a_single_template__using_automatic_inline_generation__insert_generated_code_in_a_nested_type", Sourcery__given_a_single_template__using_automatic_inline_generation__insert_generated_code_in_a_nested_type),
        ("Sourcery__given_a_single_template__using_automatic_inline_generation__insert_generated_code_in_a_nested_type_with_extension", Sourcery__given_a_single_template__using_automatic_inline_generation__insert_generated_code_in_a_nested_type_with_extension),
        ("Sourcery__given_a_single_template__using_automatic_inline_generation__insert_generated_code_in_both_type_and_its_nested_type", Sourcery__given_a_single_template__using_automatic_inline_generation__insert_generated_code_in_both_type_and_its_nested_type),
        ("Sourcery__given_a_single_template__using_automatic_inline_generation__inserts_generated_code_from_different_templates__both_inline_auto_", Sourcery__given_a_single_template__using_automatic_inline_generation__inserts_generated_code_from_different_templates__both_inline_auto_),
        ("Sourcery__given_a_single_template__using_automatic_inline_generation__inserts_generated_code_from_different_templates__both_inline_", Sourcery__given_a_single_template__using_automatic_inline_generation__inserts_generated_code_from_different_templates__both_inline_),
        ("Sourcery__given_a_single_template__using_automatic_inline_generation__inserts_generated_code_from_different_templates__inline_and_inline_auto_", Sourcery__given_a_single_template__using_automatic_inline_generation__inserts_generated_code_from_different_templates__inline_and_inline_auto_),
        ("Sourcery__given_a_single_template__using_automatic_inline_generation__with_cache_of_already_inserted_code__inserts_the_generated_code_if_it_was_deleted", Sourcery__given_a_single_template__using_automatic_inline_generation__with_cache_of_already_inserted_code__inserts_the_generated_code_if_it_was_deleted),
        ("Sourcery__given_a_single_template__using_per_file_generation__replaces_placeholder_with_generated_code", Sourcery__given_a_single_template__using_per_file_generation__replaces_placeholder_with_generated_code),
        ("Sourcery__given_a_single_template__using_per_file_generation__removes_code_from_within_generated_template", Sourcery__given_a_single_template__using_per_file_generation__removes_code_from_within_generated_template),
        ("Sourcery__given_a_single_template__using_per_file_generation__does_not_create_generated_file_with_empty_content", Sourcery__given_a_single_template__using_per_file_generation__does_not_create_generated_file_with_empty_content),
        ("Sourcery__given_a_single_template__using_per_file_generation__appends_content_of_several_annotations_into_one_file", Sourcery__given_a_single_template__using_per_file_generation__appends_content_of_several_annotations_into_one_file),
        ("Sourcery__given_a_single_template__given_a_restricted_file__ignores_files_that_are_marked_with_generated_by_Sourcery", Sourcery__given_a_single_template__given_a_restricted_file__ignores_files_that_are_marked_with_generated_by_Sourcery),
        ("Sourcery__given_a_single_template__given_a_restricted_file__throws_error_when_file_contains_merge_conflict_markers", Sourcery__given_a_single_template__given_a_restricted_file__throws_error_when_file_contains_merge_conflict_markers),
        ("Sourcery__given_a_single_template__given_a_restricted_file__does_not_throw_when_source_file_does_not_exist", Sourcery__given_a_single_template__given_a_restricted_file__does_not_throw_when_source_file_does_not_exist),
        ("Sourcery__given_a_single_template__given_excluded_source_paths__ignores_excluded_sources", Sourcery__given_a_single_template__given_excluded_source_paths__ignores_excluded_sources),
        ("Sourcery__given_a_single_template__without_a_watcher__creates_expected_output_file", Sourcery__given_a_single_template__without_a_watcher__creates_expected_output_file),
        ("Sourcery__given_a_single_template__with_watcher__re_generates_on_template_change", Sourcery__given_a_single_template__with_watcher__re_generates_on_template_change),
        ("Sourcery__given_a_template_folder__given_a_single_file_output__joins_generated_code_into_single_file", Sourcery__given_a_template_folder__given_a_single_file_output__joins_generated_code_into_single_file),
        ("Sourcery__given_a_template_folder__given_a_single_file_output__does_not_create_generated_file_with_empty_content", Sourcery__given_a_template_folder__given_a_single_file_output__does_not_create_generated_file_with_empty_content),
        ("Sourcery__given_a_template_folder__given_an_output_directory__creates_corresponding_output_file_for_each_template", Sourcery__given_a_template_folder__given_an_output_directory__creates_corresponding_output_file_for_each_template),
        ("Sourcery__given_a_template_folder__given_excluded_template_paths__do_not_create_generated_file_for_excluded_templates", Sourcery__given_a_template_folder__given_excluded_template_paths__do_not_create_generated_file_for_excluded_templates),
        ("Sourcery__given_project__links_generated_files", Sourcery__given_project__links_generated_files),
        ("Sourcery__given_project__links_generated_files_when_using_per_file_generation", Sourcery__given_project__links_generated_files_when_using_per_file_generation),
    ]
}

extension StencilTemplateSpec {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__StencilTemplateSpec = [
        ("StencilTemplate__rethrows_template_parsing_errors", StencilTemplate__rethrows_template_parsing_errors),
        ("StencilTemplate__includes_partial_templates", StencilTemplate__includes_partial_templates),
        ("StencilTemplate__json__given_dictionary__renders_unpretty_json", StencilTemplate__json__given_dictionary__renders_unpretty_json),
        ("StencilTemplate__json__given_dictionary__renders_pretty_json", StencilTemplate__json__given_dictionary__renders_pretty_json),
        ("StencilTemplate__json__given_array__renders_unpretty_json", StencilTemplate__json__given_array__renders_unpretty_json),
        ("StencilTemplate__json__given_array__renders_pretty_json", StencilTemplate__json__given_array__renders_pretty_json),
        ("StencilTemplate__toArray__given_array__doesnt_modify_the_value", StencilTemplate__toArray__given_array__doesnt_modify_the_value),
        ("StencilTemplate__toArray__given_something__transforms_it_into_array", StencilTemplate__toArray__given_something__transforms_it_into_array),
        ("StencilTemplate__count__given_array__counts_it", StencilTemplate__count__given_array__counts_it),
        ("StencilTemplate__isEmpty__given_empty_array__returns_true", StencilTemplate__isEmpty__given_empty_array__returns_true),
        ("StencilTemplate__isEmpty__given_non_empty_array__returns_false", StencilTemplate__isEmpty__given_non_empty_array__returns_false),
        ("StencilTemplate__sorted__given_array__sorts_it", StencilTemplate__sorted__given_array__sorts_it),
        ("StencilTemplate__sortedDescending__given_array__sorts_it_descending", StencilTemplate__sortedDescending__given_array__sorts_it_descending),
        ("StencilTemplate__reversed__given_array__reverses_it", StencilTemplate__reversed__given_array__reverses_it),
        ("StencilTemplate__given_string__generates_upperFirstLetter", StencilTemplate__given_string__generates_upperFirstLetter),
        ("StencilTemplate__given_string__generates_lowerFirstLetter", StencilTemplate__given_string__generates_lowerFirstLetter),
        ("StencilTemplate__given_string__generates_uppercase", StencilTemplate__given_string__generates_uppercase),
        ("StencilTemplate__given_string__generates_lowercase", StencilTemplate__given_string__generates_lowercase),
        ("StencilTemplate__given_string__generates_capitalise", StencilTemplate__given_string__generates_capitalise),
        ("StencilTemplate__given_string__generates_deletingLastComponent", StencilTemplate__given_string__generates_deletingLastComponent),
        ("StencilTemplate__given_string__checks_for_string_in_name", StencilTemplate__given_string__checks_for_string_in_name),
        ("StencilTemplate__given_string__checks_for_string_in_prefix", StencilTemplate__given_string__checks_for_string_in_prefix),
        ("StencilTemplate__given_string__checks_for_string_in_suffix", StencilTemplate__given_string__checks_for_string_in_suffix),
        ("StencilTemplate__given_string__removes_instances_of_a_substring", StencilTemplate__given_string__removes_instances_of_a_substring),
        ("StencilTemplate__given_TypeName__generates_upperFirstLetter", StencilTemplate__given_TypeName__generates_upperFirstLetter),
        ("StencilTemplate__given_TypeName__generates_upperFirstLetter_2", StencilTemplate__given_TypeName__generates_upperFirstLetter_2),
        ("StencilTemplate__given_TypeName__generates_lowerFirstLetter", StencilTemplate__given_TypeName__generates_lowerFirstLetter),
        ("StencilTemplate__given_TypeName__generates_uppercase", StencilTemplate__given_TypeName__generates_uppercase),
        ("StencilTemplate__given_TypeName__generates_lowercase", StencilTemplate__given_TypeName__generates_lowercase),
        ("StencilTemplate__given_TypeName__generates_capitalise", StencilTemplate__given_TypeName__generates_capitalise),
        ("StencilTemplate__given_TypeName__checks_for_string_in_name", StencilTemplate__given_TypeName__checks_for_string_in_name),
        ("StencilTemplate__given_TypeName__checks_for_string_in_prefix", StencilTemplate__given_TypeName__checks_for_string_in_prefix),
        ("StencilTemplate__given_TypeName__checks_for_string_in_suffix", StencilTemplate__given_TypeName__checks_for_string_in_suffix),
        ("StencilTemplate__given_TypeName__removes_instances_of_a_substring", StencilTemplate__given_TypeName__removes_instances_of_a_substring),
    ]
}

extension StringViewSpec {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__StringViewSpec = [
        ("StringView__init____parses_correct_number_of_lines_when_utf8_comments_are_present", StringView__init____parses_correct_number_of_lines_when_utf8_comments_are_present),
        ("StringView__init____parses_correct_number_of_lines_when____newline_symbols_are_present", StringView__init____parses_correct_number_of_lines_when____newline_symbols_are_present),
    ]
}

extension StructSpec {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__StructSpec = [
        ("Struct__reports_kind_as_struct", Struct__reports_kind_as_struct),
    ]
}

extension SwiftTemplateTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__SwiftTemplateTests = [
        ("SwiftTemplate__creates_persistable_data", SwiftTemplate__creates_persistable_data),
        ("SwiftTemplate__generates_correct_output", SwiftTemplate__generates_correct_output),
        ("SwiftTemplate__throws_an_error_showing_the_involved_line_for_unmatched_delimiter_in_the_template", SwiftTemplate__throws_an_error_showing_the_involved_line_for_unmatched_delimiter_in_the_template),
        ("SwiftTemplate__handles_includes", SwiftTemplate__handles_includes),
        ("SwiftTemplate__handles_file_includes", SwiftTemplate__handles_file_includes),
        ("SwiftTemplate__handles_includes_without_swifttemplate_extension", SwiftTemplate__handles_includes_without_swifttemplate_extension),
        ("SwiftTemplate__handles_file_includes_without_swift_extension", SwiftTemplate__handles_file_includes_without_swift_extension),
        ("SwiftTemplate__handles_includes_from_included_files_relatively", SwiftTemplate__handles_includes_from_included_files_relatively),
        ("SwiftTemplate__handles_file_includes_from_included_files_relatively", SwiftTemplate__handles_file_includes_from_included_files_relatively),
        ("SwiftTemplate__throws_an_error_when_an_include_cycle_is_detected", SwiftTemplate__throws_an_error_when_an_include_cycle_is_detected),
        ("SwiftTemplate__throws_an_error_when_an_include_cycle_involving_the_root_template_is_detected", SwiftTemplate__throws_an_error_when_an_include_cycle_involving_the_root_template_is_detected),
        ("SwiftTemplate__rethrows_template_parsing_errors", SwiftTemplate__rethrows_template_parsing_errors),
        ("SwiftTemplate__rethrows_template_runtime_errors", SwiftTemplate__rethrows_template_runtime_errors),
        ("SwiftTemplate__rethrows_errors_thrown_in_template", SwiftTemplate__rethrows_errors_thrown_in_template),
        ("SwiftTemplate__handles_free_functions", SwiftTemplate__handles_free_functions),
        ("SwiftTemplate__should_change_cacheKey_based_on_includeFile_modifications", SwiftTemplate__should_change_cacheKey_based_on_includeFile_modifications),
        ("SwiftTemplate__with_existing_cache__and_missing_build_dir__generates_the_code", SwiftTemplate__with_existing_cache__and_missing_build_dir__generates_the_code),
        ("FolderSynchronizer__adds_its_files_to_an_empty_folder", FolderSynchronizer__adds_its_files_to_an_empty_folder),
        ("FolderSynchronizer__creates_the_target_folder_if_it_does_not_exist", FolderSynchronizer__creates_the_target_folder_if_it_does_not_exist),
        ("FolderSynchronizer__deletes_files_not_present_in_the_synchronized_files", FolderSynchronizer__deletes_files_not_present_in_the_synchronized_files),
        ("FolderSynchronizer__replaces_the_content_of_a_file_if_a_file_with_the_same_name_already_exists", FolderSynchronizer__replaces_the_content_of_a_file_if_a_file_with_the_same_name_already_exists),
    ]
}

extension TemplateAnnotationsParserSpec {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__TemplateAnnotationsParserSpec = [
        ("InlineParser__without_indentation__tracks_it", InlineParser__without_indentation__tracks_it),
        ("InlineParser__without_indentation__removes_content_between_the_markup", InlineParser__without_indentation__removes_content_between_the_markup),
        ("InlineParser__with_indentation__tracks_it", InlineParser__with_indentation__tracks_it),
        ("InlineParser__with_indentation__removes_content_between_the_markup", InlineParser__with_indentation__removes_content_between_the_markup),
    ]
}

extension TemplatesAnnotationParserPassInlineCodeSpec {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__TemplatesAnnotationParserPassInlineCodeSpec = [
        ("InlineParser__without_indentation__tracks_it", InlineParser__without_indentation__tracks_it),
        ("InlineParser__without_indentation__does_not_remove_content_between_the_markup_when_force_parse_parameter_is_set_to_template_name", InlineParser__without_indentation__does_not_remove_content_between_the_markup_when_force_parse_parameter_is_set_to_template_name),
        ("InlineParser__with_indentation__tracks_it", InlineParser__with_indentation__tracks_it),
        ("InlineParser__with_indentation__does_not_remove_the_content_between_the_markup_when_force_parse_parameter_is_set_to_template_name", InlineParser__with_indentation__does_not_remove_the_content_between_the_markup_when_force_parse_parameter_is_set_to_template_name),
    ]
}

extension TypeNameSpec {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__TypeNameSpec = [
        ("TypeName__given_optional_type_with_short_syntax__reports_optional_true", TypeName__given_optional_type_with_short_syntax__reports_optional_true),
        ("TypeName__given_optional_type_with_short_syntax__reports_non_optional_type_for_unwrappedTypeName", TypeName__given_optional_type_with_short_syntax__reports_non_optional_type_for_unwrappedTypeName),
        ("TypeName__given_inout_type__reports_correct_unwrappedTypeName", TypeName__given_inout_type__reports_correct_unwrappedTypeName),
        ("TypeName__given_optional_type_with_long_generic_syntax__reports_optional_true", TypeName__given_optional_type_with_long_generic_syntax__reports_optional_true),
        ("TypeName__given_optional_type_with_long_generic_syntax__reports_non_optional_type_for_unwrappedTypeName", TypeName__given_optional_type_with_long_generic_syntax__reports_non_optional_type_for_unwrappedTypeName),
        ("TypeName__given_type_wrapped_with_extra_closures__unwraps_it_completely", TypeName__given_type_wrapped_with_extra_closures__unwraps_it_completely),
        ("TypeName__given_tuple_type__reports_tuple_correctly", TypeName__given_tuple_type__reports_tuple_correctly),
        ("TypeName__given_array_type__reports_array_correctly", TypeName__given_array_type__reports_array_correctly),
        ("TypeName__given_array_type__reports_dictionary_correctly", TypeName__given_array_type__reports_dictionary_correctly),
        ("TypeName__given_dictionary_type__as_name__reports_dictionary_correctly", TypeName__given_dictionary_type__as_name__reports_dictionary_correctly),
        ("TypeName__given_dictionary_type__as_name__reports_array_correctly", TypeName__given_dictionary_type__as_name__reports_array_correctly),
        ("TypeName__given_closure_type__reports_closure_correctly", TypeName__given_closure_type__reports_closure_correctly),
        ("TypeName__given_closure_type__reports_optional_status_correctly", TypeName__given_closure_type__reports_optional_status_correctly),
        ("TypeName__given_closure_type_inside_generic_type__reports_closure_correctly", TypeName__given_closure_type_inside_generic_type__reports_closure_correctly),
        ("TypeName__given_closure_type_with_attributes__removes_attributes_in_unwrappedTypeName", TypeName__given_closure_type_with_attributes__removes_attributes_in_unwrappedTypeName),
        ("TypeName__given_closure_type_with_attributes__orders_attributes_alphabetically", TypeName__given_closure_type_with_attributes__orders_attributes_alphabetically),
    ]
}

extension TypeSpec {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__TypeSpec = [
        ("Type__being_not_an_extension_reports_kind_as_unknown", Type__being_not_an_extension_reports_kind_as_unknown),
        ("Type__being_an_extension_reports_kind_as_extension", Type__being_an_extension_reports_kind_as_extension),
        ("Type__resolves_name", Type__resolves_name),
        ("Type__has_local_name", Type__has_local_name),
        ("Type__filters_static_variables", Type__filters_static_variables),
        ("Type__filters_computed_variables", Type__filters_computed_variables),
        ("Type__filters_stored_variables", Type__filters_stored_variables),
        ("Type__filters_instance_variables", Type__filters_instance_variables),
        ("Type__filters_initializers", Type__filters_initializers),
        ("Type__flattens_methods_from_supertype", Type__flattens_methods_from_supertype),
        ("Type__flattens_variables_from_supertype", Type__flattens_variables_from_supertype),
        ("Type__isGeneric__given_generic_type__recognizes_correctly_for_simple_generic", Type__isGeneric__given_generic_type__recognizes_correctly_for_simple_generic),
        ("Type__isGeneric__given_non_generic_type__recognizes_correctly_for_simple_type", Type__isGeneric__given_non_generic_type__recognizes_correctly_for_simple_type),
        ("Type__when_setting_containedTypes__sets_their_parent_to_self", Type__when_setting_containedTypes__sets_their_parent_to_self),
        ("Type__when_extending_with_Type_extension__adds_variables_if_they_are_unique", Type__when_extending_with_Type_extension__adds_variables_if_they_are_unique),
        ("Type__when_extending_with_Type_extension__does_not_duplicate_variables_of_same_configuration", Type__when_extending_with_Type_extension__does_not_duplicate_variables_of_same_configuration),
        ("Type__when_extending_with_Type_extension__does_not_duplicate_variables_with_protocol_extension", Type__when_extending_with_Type_extension__does_not_duplicate_variables_with_protocol_extension),
        ("Type__when_extending_with_Type_extension__adds_methods", Type__when_extending_with_Type_extension__adds_methods),
        ("Type__when_extending_with_Type_extension__does_not_duplicate_methods_with_protocol_extension", Type__when_extending_with_Type_extension__does_not_duplicate_methods_with_protocol_extension),
        ("Type__when_extending_with_Type_extension__adds_annotations", Type__when_extending_with_Type_extension__adds_annotations),
        ("Type__when_extending_with_Type_extension__adds_inherited_types", Type__when_extending_with_Type_extension__adds_inherited_types),
        ("Type__when_extending_with_Type_extension__adds_implemented_types", Type__when_extending_with_Type_extension__adds_implemented_types),
        ("Type__When_accessing_allImports_property__returns_correct_imports_after_removing_duplicates_for_type_with_a_super_type", Type__When_accessing_allImports_property__returns_correct_imports_after_removing_duplicates_for_type_with_a_super_type),
        ("Type__When_testing_equality__given_same_items__is_equal", Type__When_testing_equality__given_same_items__is_equal),
        ("Type__When_testing_equality__given_different_items__is_not_equal", Type__When_testing_equality__given_different_items__is_not_equal),
    ]
}

extension TypealiasSpec {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__TypealiasSpec = [
        ("Typealias__give_no_parent_type__reports_name_correctly", Typealias__give_no_parent_type__reports_name_correctly),
        ("Typealias__given_parent_type__reports_name_correctly", Typealias__given_parent_type__reports_name_correctly),
        ("Typealias__When_testing_equality__given_same_items__is_equal", Typealias__When_testing_equality__given_same_items__is_equal),
        ("Typealias__When_testing_equality__given_different_items__is_not_equal", Typealias__When_testing_equality__given_different_items__is_not_equal),
    ]
}

extension TypedSpec {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__TypedSpec = [
        ("AssociatedValue__can_report_optional_via_KVC", AssociatedValue__can_report_optional_via_KVC),
        ("AssociatedValue__can_report_tuple_type_via_KVC", AssociatedValue__can_report_tuple_type_via_KVC),
        ("AssociatedValue__can_report_closure_type_via_KVC", AssociatedValue__can_report_closure_type_via_KVC),
        ("AssociatedValue__can_report_array_type_via_KVC", AssociatedValue__can_report_array_type_via_KVC),
        ("AssociatedValue__can_report_dictionary_type_via_KVC", AssociatedValue__can_report_dictionary_type_via_KVC),
        ("AssociatedValue__can_report_actual_type_name_via_KVC", AssociatedValue__can_report_actual_type_name_via_KVC),
        ("ClosureParameter__can_report_optional_via_KVC", ClosureParameter__can_report_optional_via_KVC),
        ("ClosureParameter__can_report_tuple_type_via_KVC", ClosureParameter__can_report_tuple_type_via_KVC),
        ("ClosureParameter__can_report_closure_type_via_KVC", ClosureParameter__can_report_closure_type_via_KVC),
        ("ClosureParameter__can_report_array_type_via_KVC", ClosureParameter__can_report_array_type_via_KVC),
        ("ClosureParameter__can_report_dictionary_type_via_KVC", ClosureParameter__can_report_dictionary_type_via_KVC),
        ("ClosureParameter__can_report_actual_type_name_via_KVC", ClosureParameter__can_report_actual_type_name_via_KVC),
        ("MethodParameter__can_report_optional_via_KVC", MethodParameter__can_report_optional_via_KVC),
        ("MethodParameter__can_report_tuple_type_via_KVC", MethodParameter__can_report_tuple_type_via_KVC),
        ("MethodParameter__can_report_closure_type_via_KVC", MethodParameter__can_report_closure_type_via_KVC),
        ("MethodParameter__can_report_array_type_via_KVC", MethodParameter__can_report_array_type_via_KVC),
        ("MethodParameter__can_report_dictionary_type_via_KVC", MethodParameter__can_report_dictionary_type_via_KVC),
        ("MethodParameter__can_report_actual_type_name_via_KVC", MethodParameter__can_report_actual_type_name_via_KVC),
        ("TupleElement__can_report_optional_via_KVC", TupleElement__can_report_optional_via_KVC),
        ("TupleElement__can_report_tuple_type_via_KVC", TupleElement__can_report_tuple_type_via_KVC),
        ("TupleElement__can_report_closure_type_via_KVC", TupleElement__can_report_closure_type_via_KVC),
        ("TupleElement__can_report_array_type_via_KVC", TupleElement__can_report_array_type_via_KVC),
        ("TupleElement__can_report_dictionary_type_via_KVC", TupleElement__can_report_dictionary_type_via_KVC),
        ("TupleElement__can_report_actual_type_name_via_KVC", TupleElement__can_report_actual_type_name_via_KVC),
        ("Typealias__can_report_optional_via_KVC", Typealias__can_report_optional_via_KVC),
        ("Typealias__can_report_tuple_type_via_KVC", Typealias__can_report_tuple_type_via_KVC),
        ("Typealias__can_report_closure_type_via_KVC", Typealias__can_report_closure_type_via_KVC),
        ("Typealias__can_report_array_type_via_KVC", Typealias__can_report_array_type_via_KVC),
        ("Typealias__can_report_dictionary_type_via_KVC", Typealias__can_report_dictionary_type_via_KVC),
        ("Typealias__can_report_actual_type_name_via_KVC", Typealias__can_report_actual_type_name_via_KVC),
        ("Variable__can_report_optional_via_KVC", Variable__can_report_optional_via_KVC),
        ("Variable__can_report_tuple_type_via_KVC", Variable__can_report_tuple_type_via_KVC),
        ("Variable__can_report_closure_type_via_KVC", Variable__can_report_closure_type_via_KVC),
        ("Variable__can_report_array_type_via_KVC", Variable__can_report_array_type_via_KVC),
        ("Variable__can_report_dictionary_type_via_KVC", Variable__can_report_dictionary_type_via_KVC),
        ("Variable__can_report_actual_type_name_via_KVC", Variable__can_report_actual_type_name_via_KVC),
    ]
}

extension VariableSpec {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__VariableSpec = [
        ("Variable__has_proper_defined_in_type_name", Variable__has_proper_defined_in_type_name),
        ("Variable__has_proper_read_access", Variable__has_proper_read_access),
        ("Variable__has_proper_write_access", Variable__has_proper_write_access),
        ("Variable__When_testing_equality__given_same_items__is_equal", Variable__When_testing_equality__given_same_items__is_equal),
        ("Variable__When_testing_equality__given_different_items__is_not_equal", Variable__When_testing_equality__given_different_items__is_not_equal),
    ]
}

extension VerifierSpec {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__VerifierSpec = [
        ("Verifier__allows_empty_strings", Verifier__allows_empty_strings),
        ("Verifier__rejects_files_generated_by_Sourcery", Verifier__rejects_files_generated_by_Sourcery),
        ("Verifier__rejects_files_generated_by_Sourcery_when_a_force_parse_extension_is_defined_but_doesn_t_match_file", Verifier__rejects_files_generated_by_Sourcery_when_a_force_parse_extension_is_defined_but_doesn_t_match_file),
        ("Verifier__doesn_t_reject_files_generated_by_Sourcery_but_that_we_want_to_force_the_parsing_for", Verifier__doesn_t_reject_files_generated_by_Sourcery_but_that_we_want_to_force_the_parsing_for),
        ("Verifier__rejects_file_containing_conflict_marker", Verifier__rejects_file_containing_conflict_marker),
    ]
}

public func __allTests() -> [XCTestCaseEntry] {
    return [
        testCase(ActorSpec.__allTests__ActorSpec),
        testCase(AnnotationsParserSpec.__allTests__AnnotationsParserSpec),
        testCase(ClassSpec.__allTests__ClassSpec),
        testCase(ConfigurationSpec.__allTests__ConfigurationSpec),
        testCase(DiffableSpec.__allTests__DiffableSpec),
        testCase(DryOutputSpec.__allTests__DryOutputSpec),
        testCase(EnumSpec.__allTests__EnumSpec),
        testCase(FileParserAssociatedTypeSpec.__allTests__FileParserAssociatedTypeSpec),
        testCase(FileParserAttributesSpec.__allTests__FileParserAttributesSpec),
        testCase(FileParserMethodsSpec.__allTests__FileParserMethodsSpec),
        testCase(FileParserProtocolCompositionSpec.__allTests__FileParserProtocolCompositionSpec),
        testCase(FileParserSpec.__allTests__FileParserSpec),
        testCase(FileParserSubscriptsSpec.__allTests__FileParserSubscriptsSpec),
        testCase(FileParserVariableSpec.__allTests__FileParserVariableSpec),
        testCase(GeneratorSpec.__allTests__GeneratorSpec),
        testCase(JavaScriptTemplateTests.__allTests__JavaScriptTemplateTests),
        testCase(MethodSpec.__allTests__MethodSpec),
        testCase(ParserComposerSpec.__allTests__ParserComposerSpec),
        testCase(ProtocolSpec.__allTests__ProtocolSpec),
        testCase(SourcerySpecTests.__allTests__SourcerySpecTests),
        testCase(StencilTemplateSpec.__allTests__StencilTemplateSpec),
        testCase(StringViewSpec.__allTests__StringViewSpec),
        testCase(StructSpec.__allTests__StructSpec),
        testCase(SwiftTemplateTests.__allTests__SwiftTemplateTests),
        testCase(TemplateAnnotationsParserSpec.__allTests__TemplateAnnotationsParserSpec),
        testCase(TemplatesAnnotationParserPassInlineCodeSpec.__allTests__TemplatesAnnotationParserPassInlineCodeSpec),
        testCase(TypeNameSpec.__allTests__TypeNameSpec),
        testCase(TypeSpec.__allTests__TypeSpec),
        testCase(TypealiasSpec.__allTests__TypealiasSpec),
        testCase(TypedSpec.__allTests__TypedSpec),
        testCase(VariableSpec.__allTests__VariableSpec),
        testCase(VerifierSpec.__allTests__VerifierSpec),
    ]
}
#endif
